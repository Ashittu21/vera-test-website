{% extends '_layout' %}
{% block content %}

{% set filterSection   = craft.app.request.getQueryParam('section') %}

{% set streamOptions = {
      title: 'All Research & Analysis',
      news: false,
      filterAltLayout: 'unstacked',
      sections: [
            ['Publications', 'publications'],
            ['Audio', 'audio'],
            ['Video', 'video'],
            ['Resource Sites', 'resourceSite'],
            ['Special Reports', 'specialReports']
          ],
      filterRelations: [{type: 'categories', relations: craft.categories.group('ourWork').level(2), title: 'Action Areas'}]
      }
%}

{% if entry is defined and entry.type.handle in ['ourProjects'] %}
  {% set streamOptions = streamOptions|merge({showArchived: true}) %}
{% endif %}

{% if streamOptions.streamType is not defined %}
  {% set streamOptions = streamOptions|merge({streamType: 'content'}) %}
{% endif %}


{% if craft.request.getParam('relations') %}
                {% set relationObjsQuery = craft.request.getParam('relations') | split('},') %}
                {% set relationObjs = [] %}
                {% for relation in relationObjsQuery %}
                        {% if not loop.last %}
                                {% set relation = relation~'}' %}
                        {% endif %}
                        {% set thisrelation = relation | json_decode %}
                        {% set relationObjs = relationObjs | merge([thisrelation]) %}
                {% endfor %}
        {% elseif streamOptions.primaryRelation is defined %}
                {% set relationObjs = [{
                        type: streamOptions.primaryRelation.type,
                        id: streamOptions.primaryRelation.relations[0].id
                }] %}
        {% endif %}




        {% if craft.request.getParam('sections') %}
                {% set searchSections = craft.request.getParam('sections') | split(',') %}
        {% elseif streamOptions.sections is defined %}
                {% set searchSections = [] %}
                {% for section in streamOptions.sections %}
                        {% set searchSections = searchSections|merge([section[1]]) %}
                {% endfor %}
                {% if streamOptions.hiddenSections is defined %}
                        {% set searchSections = searchSections|merge(streamOptions.hiddenSections) %}
                {% endif %}
        {% else %}
                {% set searchSections = [] %}
        {% endif %}




{% if relations is not defined and relationObjs is defined and relationObjs|length > 0 %}
        {% set relations = [] %}
        {% for relation in relationObjs %}
                {% if relation.type == 'entries' %}

                        {% if (streamType == 'people') %}
                                {% set relations = relations|merge([{sourceElement: craft.entries.id(relation.id).first}]) %}
                        {% else %}
                                {% set relations = relations|merge([{targetElement: craft.entries.id(relation.id).first}]) %}
                        {% endif %}

                        {% set relatedPeopleInCenter =  craft.entries.section('people').relatedTo(craft.entries.id(relation.id).first) %}

                {% elseif relation.type == 'categories' %}
                        {% set relations = relations|merge([{targetElement: craft.categories.id(relation.id).first}]) %}
                {% endif %}
        {% endfor %}
{% elseif relationObjs is not defined and relations is not defined %}
        {% set relations = null %}
{% endif %}








{% set queryObj = {
                relatedTo: relations,
                section: searchSections
        }
%}

{% set totalEntries = craft.entries(queryObj).limit(10).count() %}
{% paginate craft.entries(queryObj).limit(10) as pageInfo, pageEntries %}

<!-- Hero Block -->
  <div class="heroType1-container"  style="background-image: url('{{ entry.heroType1_image.first.url }}');">
    <div class="heroType1-block-box">
      <div class="heroType1-block-box-content">
          <div class="heroType1-block-breadcrumbs">
            {% if entry.level > 1 %}
                <a href="{{ siteUrl }}">HOME</a>
                {% for crumb in entry.getAncestors() %}
                  {{ crumb.getLink() }}
                {% endfor %}
            {% else %}
            <a href="{{ siteUrl }}">HOME</a>
            {% endif %}
          </div>
          <div class="heroType1-block-title">
            <h1>{{ entry.heroType1_title }}</h1>
          </div>
      </div>
    </div>
  </div>
<!-- END Hero Block -->


  <div class="rs-page">
    <section class="rs-head-container">
      <div class="rs-headContent">

        <div class="rs-headContent-title">
          <h4>{{ entry.rs_headline }}</h4>
          <div class="rs-headContent-title-copy">
            {{ entry.rs_copy }}
          </div>
        </div>

        <h3 class="rs-title">Research & Solutions</h3>

        <div class="rs-head-form">
          <div class="filter-by">
            FILTER BY
          </div>
          <div class="rs-filters">
            {% include 'v2/templates/filter' %}
          </div>


        </div>
      </div>

    </section>


    <section class="rs-listing">
      <div class="rs-listing-content">

              {% if entry.newsHero_article|length %}
          {% set heroNews = entry.newsHero_article.one() %}
        <div class="rs-listing-hero">
          <div class="rs-listing-hero-container">
            <div class="rs-listing-hero-image">
              <img src="{{ entry.newsHero_image.first.url }}" alt="">
            </div>
            <div class="rs-listing-hero-copy">
              <div>
                <div class="rs-listing-hero-copy-category">
                  <p>{{ heroNews.type.name | title | upper }}</p>
                </div>
                <div class="rs-listing-hero-copy-title">
                  <a href="{{ heroNews.url }}">
                    <h4>{{ entry.newsHero_title }}</h4>
                  </a>
                </div>

                <div class="rs-listing-hero-copy-excerpt">
                    {% if entry.newsHero_subtitle %}
                     <p>{{ entry.newsHero_subtitle }}</p>
                    {% endif %}
                </div>

                <div class="rs-listing-hero-copy-date">
                  <p>{{ heroNews.postDate | date("M d, Y") }}</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      {% endif %}

        
    <div class="rs-listing-items">    
    {% set fallback = 0 %}
     {% for result in pageEntries %}

         {% set image = result.streamImageRectangle.one() %}
          <div class="rs-listing-item">
            <div class="rs-listing-item-wrapper">
              <div class="rs-listing-item-cat">
                <span>
                 {{ result.type.name }}
                </span>
              </div>
              <div class="rs-listing-item-content">

                <div class="rs-listing-item-content-date">
                  {{ entry.postDate | date("M d, Y") }}
                </div>

                <a href="{{ result.url }}"  class="rs-listing-item-content-title" target="_blank"><h6>{{ result.title }}</h6></a>
                <p class="rs-listing-item-content-copy">
                  Line of text from the resource goes here lorem ipsum dolor sit amet...
                </p>

              </div>
              <div class="rs-listing-item-image">
               {% if image %}
                        <img src="{{ image.getUrl('thumbnailVertical') }}" alt=""/>
                    {% else %}
                      {% if fallback <= 3 %}
                          {% set fallback =  fallback + 1 %}
                      {% else %}
                          {% set fallback = 1 %}
                      {% endif %}
                      {% include 'v2/common/placeHolderImg' with 
                        { 
                          indexColor: fallback,  
                        } 
                      %}
                    {% endif %}
              </div>
            </div>
          </div>
     {% endfor %}

      </div>

        <div class="rs-paginate">

          {% if pageInfo.prevUrl %}
            <a href="{{ pageInfo.prevUrl }}" class="rs-paginate-item-prev">Prev</a>
          {% else %}
            <a href="{{ pageInfo.firstUrl }}" class="rs-paginate-item-prev">Prev</a>
          {% endif %}

          {% for page, url in pageInfo.getPrevUrls(4) %}
            <a href="{{ url }}" class="rs-paginate-item">{{ page }}</a>
          {% endfor %}

          <span class="rs-paginate-item--current">{{ pageInfo.currentPage }}</span>

          {% for page, url in pageInfo.getNextUrls(4) %}
            <a href="{{ url }}" class="rs-paginate-item">{{ page }}</a>
          {% endfor %}

          {% if pageInfo.nextUrl %}<a href="{{ pageInfo.nextUrl }}" class="rs-paginate-item-next">Next</a>{% endif %}
        </div>
        <div class="rs-paginate-counter"> {{ pageInfo.currentPage * 10 - 9 }}-{{ pageInfo.currentPage * 10 }} of {{ totalEntries }} results </div>

      </div>
    </section>
  </div>





<script>

$('body').on("click", ".dropdown-menu-section", function (e) {
    $(this).parent().is(".open") && e.stopPropagation();
});

$("input[type='checkbox'].section_checkbox").change(function(){
    var a = $("input[type='checkbox'].section_checkbox");
    if(a.length == a.filter(":checked").length){
        $('.selectall').prop('checked', true);
        $(".select-text").html(' Deselect');
    }

  var total = $('input[name="optionsTopic[]"]:checked').length;
  $(".dropdown-text-section").html('Topic (' + total + ')');
});



$("input[type='checkbox'].relation_checkbox").change(function(){
    var a = $("input[type='checkbox'].relation_checkbox");
    if(a.length == a.filter(":checked").length){
        $('.selectall').prop('checked', true);
        $(".select-text").html(' Deselect');
    }

  var total = $('input[name="optionsRelations[]"]:checked').length;
  $(".dropdown-text-relations").html('Action Areas (' + total + ')');
});


$('.apply').click(function(e) {

   var sections = [];
    $(".section_checkbox:checked").each(function () {
      sections.push(this.value);
    });

    if (sections.length == 0) {
      $(".section_checkbox").each(function () {
        sections.push(this.value);
      });
      var nosectionrelation = true;
    }

   var relations = [];
        $(".relation_checkbox:checked").each(function () {
          relations.push({
            id: this.value,
            type: this.dataset.type,
            category: this.dataset.category,
          });
        });


    var varRelations = JSON.stringify(relations);
        varRelations = varRelations.replace('[','');
        varRelations = varRelations.replace(']','');
    var varSections = sections.join(',');
    query = 'sections=' + varSections +'&relations='+ varRelations;
    window.location.search = query;

});
</script>

{% endblock %}