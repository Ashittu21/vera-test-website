{% extends '_layout' %}
{% block content %}

{% set filterSection   = craft.app.request.getQueryParam('section') %}
{% set filterOrder     = craft.app.request.getQueryParam('order') %}

{% set streamOptions = {
      title: 'All Research & Analysis',
      news: false,
      filterAltLayout: 'unstacked',
      sections: [
            ['Publications', 'publications'],
            ['Audio', 'audio'],
            ['Video', 'video'],
            ['Resource Sites', 'resourceSite'],
            ['Special Reports', 'specialReports'],
            ['Blog Series', 'blogSeries']
          ],
      filterRelations: [{type: 'categories', relations: craft.categories.group('ourWork').level(2), title: 'Resource Type'}]
      }
%}

{#
{% if entry is defined and entry.type.handle in ['ourProjects'] %}
  {% set streamOptions = streamOptions|merge({showArchived: true}) %}
{% endif %}
#}

{% if streamOptions.streamType is not defined %}
  {% set streamOptions = streamOptions|merge({streamType: 'content'}) %}
{% endif %}


{% if craft.request.getParam('relations') %}
                {% set relationObjsQuery = craft.request.getParam('relations') | split('},') %}
                {% set relationObjs = [] %}
                {% for relation in relationObjsQuery %}
                        {% if not loop.last %}
                                {% set relation = relation~'}' %}
                        {% endif %}
                        {% set thisrelation = relation | json_decode %}
                        {% set relationObjs = relationObjs | merge([thisrelation]) %}
                {% endfor %}

        {% set relacionesArray = [] %}
        {% for relaciones in relationObjs %}
          {% set relacionesArray = relacionesArray|merge([relaciones["id"]]) %}
        {% endfor %}



        {% elseif streamOptions.primaryRelation is defined %}
                {% set relationObjs = [{
                        type: streamOptions.primaryRelation.type,
                        id: streamOptions.primaryRelation.relations[0].id
                }] %}
        {% endif %}


        {% if craft.request.getParam('sections') %}
          {% set searchSections = craft.request.getParam('sections') | split(',') %}
        {% elseif streamOptions.sections is defined %}
                {% set searchSections = [] %}
                {% for section in streamOptions.sections %}
                    {% set searchSections = searchSections|merge([section[1]]) %}
                {% endfor %}
                {#{% if streamOptions.hiddenSections is defined %}
                        {% set searchSections = searchSections|merge(streamOptions.hiddenSections) %}
                {% endif %} #}
        {% else %}
          {% set searchSections = [] %}
        {% endif %}


{% if relations is not defined and relationObjs is defined and relationObjs|length > 0 %}
        {% set relations = [] %}
        {% for relation in relationObjs %}
                {% if relation.type == 'entries' %}

                        {% if (streamType == 'people') %}
                                {% set relations = relations|merge([{sourceElement: craft.entries.id(relation.id).first}]) %}
                        {% else %}
                                {% set relations = relations|merge([{targetElement: craft.entries.id(relation.id).first}]) %}
                        {% endif %}

                        {% set relatedPeopleInCenter =  craft.entries.section('people').relatedTo(craft.entries.id(relation.id).first) %}

                {% elseif relation.type == 'categories' %}
                        {% set relations = relations|merge([{targetElement: craft.categories.id(relation.id).first}]) %}
                {% endif %}
        {% endfor %}
{% elseif relationObjs is not defined and relations is not defined %}
        {% set relations = null %}
{% endif %}

{% set queryObj = {
    relatedTo: relations,
    section: searchSections,
  }
%}

{# section('and, not this, not that') #}
{% set totalEntries = craft.entries(queryObj).limit(10).count() %}

{% if filterOrder == 'newest' %}
  {% paginate craft.entries(queryObj).orderBy('dateCreated DESC').limit(10) as pageInfo, pageEntries %}
{% elseif  filterOrder =="oldest" %}
  {% paginate craft.entries(queryObj).orderBy('dateCreated ASC').limit(10) as pageInfo, pageEntries %}
{% else %}
  {% paginate craft.entries(queryObj).orderBy('dateCreated DESC').limit(10) as pageInfo, pageEntries %}
{% endif %}

<!-- Hero Block -->
  <div class="heroType1-container"  style="background-image: url('{{ entry.heroType1_image.first.url }}');">
    <div class="heroType1-block-box">
      <div class="heroType1-block-box-content">
          <div class="heroType1-block-breadcrumbs">
            {% if entry.level > 1 %}
                <a href="{{ siteUrl }}">HOME</a>
                {% for crumb in entry.getAncestors() %}
                  {{ crumb.getLink() }}
                {% endfor %}
            {% else %}
            <a href="{{ siteUrl }}">HOME</a>
            {% endif %}
          </div>
          <div class="heroType1-block-title">
            <h1>{{ entry.heroType1_title }}</h1>
          </div>
      </div>
    </div>
  </div>
<!-- END Hero Block -->

{% set myEntryQuery = craft.entries().section('blogPosts').orderBy('dateCreated DESC') %}
  <div class="rs-page">

    <section class="rs-head-container">
      <div class="rs-headContent">
        <div class="rs-headContent-title">
          <h4>{{ entry.rs_headline }}</h4>
          <div class="rs-headContent-title-copy">
            {{ entry.rs_copy }}
          </div>
        </div>
        <h3 class="rs-title">Solutions & Research</h3>

        <div class="rs-head-form">
          <div class="filter-by">
            FILTER BY
          </div>
          <div class="mobile-filter-by">
            Sort & Filter
          </div>
          
          <button class="close-rs-filter"> </button>

          <div class="rs-filters">
            {% include 'v2/templates/solutionsResearch/filterDesktop' %}
          </div>

        <div class="mobile-filter-sort">
          <hr>
          <label for="orderby" >Sort by</label>
            <select type="text" class="orderby"> 
              <option value="newest" {% if filterOrder == 'newest' %} selected {% endif %}>Newest</option>
              <option value="oldest" {% if filterOrder == 'oldest' %} selected {% endif %}>Oldest</option>
            </select>
        </div> 


        <div class="mobile-filter-submit">
          <button type="button"  class="filterSubmit apply"><span>Show Results</span></button>
        </div>


          <div class="rs-tags">
            <a href="#" id="clearall">Clear all </a>
            <div id="searchTags"> </div>
          </div>

        </div>

        <div class="rs-head-form-mobile">
          <button type="button" class="filter" id="sortFilter" ><span>Sort & filter</span></button>
        </div>
      </div>
    </section>

    <section class="rs-listing">
      <div class="rs-listing-content">
        {% if entry.newsHero_article|length %}

        {% set heroNews = entry.newsHero_article.one() %}
        <div class="rs-listing-hero">
          <div class="rs-listing-hero-container">
            <div class="rs-listing-hero-image">
              <img src="{{ entry.newsHero_image.first.url }}" alt="">
            </div>
            <div class="rs-listing-hero-copy">
              <div>
                <div class="rs-listing-hero-copy-category">       
                  <p>{{ heroNews.type.name | title | upper }}</p>
                </div>
                <div class="rs-listing-hero-copy-title">
                  <a href="{{ heroNews.url }}">
                    <h4>{{ entry.newsHero_title }}</h4>
                  </a>
                </div>

                <div class="rs-listing-hero-copy-excerpt">
                    {% if entry.newsHero_subtitle %}
                     <p>{{ entry.newsHero_subtitle }}</p>
                    {% endif %}
                </div>

                <div class="rs-listing-hero-copy-date">
                  <p>{{ heroNews.postDate | date("M d, Y") }}</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      {% else %}
      
      {% set mainNews = craft.entries().section('blogPosts').one() %}
        {% if  mainNews.streamImageRectangle is not null %}
          {% set imageN =  mainNews.streamImageRectangle.one() %}
        {% else %}
          {% set imageN = null %}
        {% endif %}

      <div class="rs-listing-hero">
            <div class="rs-listing-hero-container">
              <div class="rs-listing-hero-image">
                <img src="{{ imageN.url }}" alt="">
              </div>
              <div class="rs-listing-hero-copy">
                <div>
                  <div class="rs-listing-hero-copy-category">
                    <p>{{ mainNews.type.name | title | upper }}</p>
                  </div>
                  <div class="rs-listing-hero-copy-title">
                    <a href="">
                      <h4>{{ mainNews.title }}</h4>
                    </a>
                  </div>

                  <div class="rs-listing-hero-copy-excerpt">
                      <p>{{ mainNews.subtitle }}</p>
                  </div>

                  <div class="rs-listing-hero-copy-date">
                    <p> {{ mainNews.postDate | date("M d, Y") }}</p>
                  </div>

                </div>
              </div>
            </div>
          </div>
      {% endif %}


    <div class="rs-listing-filter">
      <label for="orderby">Sort by</label>
      <select type="text" class="orderby"> 
        <option value="newest" {% if filterOrder == 'newest' %} selected {% endif %}>Newest</option>
        <option value="oldest" {% if filterOrder == 'oldest' %} selected {% endif %}>Oldest</option>
      </select>
    </div>

    <div class="rs-listing-items">    
    {% set fallback = 0 %}
     {% for result in pageEntries if result.type != "slideout" and result.type != "story"  %}

        {% if  result.streamImageRectangle is not null %}
          {% set image = result.streamImageRectangle.one() %}
        {% else %}
          {% set image = null %}
        {% endif %}

          <div class="rs-listing-item">
            <div class="rs-listing-item-wrapper">
              <div class="rs-listing-item-cat">
                <span>
                   {% if result.type.handle in ['specialReportSingle','specialReportChaptered','specialReport','specialReportCampaign'] %}
                      <p>Special Report</p>
                    {% else %}
                      <p>{{ result.type.name | title | upper }}</p>
                  {% endif %}
                </span>
              </div>
              <div class="rs-listing-item-content">

                <div class="rs-listing-item-content-date">
                  {{ result.postDate | date("M d, Y") }}
                </div>

                <a href="{{ result.url }}"  class="rs-listing-item-content-title" target="_blank"><h6 class="c-black">{{ result.title }}</h6></a>
                <p class="rs-listing-item-content-copy">
                {% switch result.type.handle %}
                   {% case 'publicationOverview' %}
                        {{ result.subtitle }}
                   {% case 'audio' %}
                        {{ result.overview|striptags|truncate(120)|raw }}
                   {% case 'video' %}
                        {{ result.overview|striptags|truncate(120)|raw }}
                   {% case 'videoPlaylist' %}
                        {{ result.overview|striptags|truncate(120)|raw }}
                   {% case 'resourceSite' %}
                        {{ result.overview|striptags|truncate(120)|raw }}
                   {% case 'specialReport' %}
                        {{ result.overview|striptags|truncate(120)|raw }}
                   {% case 'story' %}
                        {% if result.storiesSubtitle | length > 1 %}
                          {{ result.storiesSubtitle|striptags|truncate(120)|raw }}
                        {% elseif  result.overview | length > 1 %}
                            {{ result.overview|striptags|truncate(120)|raw }}
                        {% elseif result.specialReportsArticle.type('copy').first()  | length > 1 %}
                            {{ result.specialReportsArticle.type('copy').first().text|striptags|truncate(120)|raw }}
                        {% endif %}
                   {% default %}
                       <!-- {{ result.type.handle }} -->
                 {% endswitch %}
                </p>

              </div>
              <div class="rs-listing-item-image">
               
               {% if image %}
                        <img src="{{ image.getUrl('thumbnailVertical') }}" alt=""/>
                    {% else %}
                      {% if fallback <= 3 %}
                          {% set fallback =  fallback + 1 %}
                      {% else %}
                          {% set fallback = 1 %}
                      {% endif %}
                      {% include 'v2/common/placeHolderImg' with 
                        { 
                          indexColor: fallback,  
                        } 
                      %}
                    {% endif %}
                    {% if result.type.handle == 'blogSeries' %}
                    
                     <img src="/dist/img/v2/series.svg" class="series-icon">
                    
                    {% endif %}
              </div>
            </div>
          </div>
     {% endfor %}

      </div>

        <div class="rs-paginate">

          {% if pageInfo.prevUrl %}
            <a href="{{ pageInfo.prevUrl }}" class="rs-paginate-item-prev">Prev</a>
          {% else %}
            <a href="{{ pageInfo.firstUrl }}" class="rs-paginate-item-prev">Prev</a>
          {% endif %}

          {% for page, url in pageInfo.getPrevUrls(4) %}
            <a href="{{ url }}" class="rs-paginate-item">{{ page }}</a>
          {% endfor %}

          <span class="rs-paginate-item--current">{{ pageInfo.currentPage }}</span>

          {% for page, url in pageInfo.getNextUrls(4) %}
            <a href="{{ url }}" class="rs-paginate-item">{{ page }}</a>
          {% endfor %}

          {% if pageInfo.nextUrl %}<a href="{{ pageInfo.nextUrl }}" class="rs-paginate-item-next">Next</a>{% endif %}
        </div>
        <div class="rs-paginate-counter"> {{ pageInfo.currentPage * 10 - 9 }}-{{ pageInfo.currentPage * 10 }} of {{ totalEntries }} results </div>

      </div>
    </section>
  </div>

<script>
var optionSelected = [];
let tagCont    = document.getElementById('searchTags');
var sortMobile = document.querySelector('#sortFilter');
var header     = document.querySelector('.header-v2-mobile');
var rsForm     = document.querySelector('.rs-head-form');
var html       = document.querySelector(':root');
var closersFilter     = document.querySelector('.close-rs-filter');


sortMobile.addEventListener('click', function (event) {
 header.classList.toggle('hidden');
 rsForm.classList.toggle('show');
 window.scrollTo({ top: 0, behavior: 'smooth' });
 html.classList.toggle('overflowHidden');
});

closersFilter.addEventListener('click', function (event) {
 header.classList.toggle('hidden');
 rsForm.classList.toggle('show');
 html.classList.toggle('overflowHidden');
});



function createTagItem(name, id) {
  let a = document.createElement('a');
  a.textContent = name;
  a.setAttribute("data-check", id);
  a.setAttribute("href", '#');
  a.setAttribute("class", 'filterTags');
  return a;
}

function borra(t) {
  $.each(optionSelected, function(i) {
    if (optionSelected[i].id === t) {
      optionSelected.splice(i, 1);
      return false;
    }
  });
  document.querySelector('[data-check="' + t + '"]').remove();
}

$(document).on('click', '.filterTags', function(event) {
  event.preventDefault();
  console.log(this.getAttribute('data-check'));
  document.getElementById(this.getAttribute('data-check')).checked = false;
  var totalRelations = $('input[name="optionsRelations[]"]:checked').length;
  $(".dropdown-text-relations").html('Topic (' + totalRelations + ')');
  borra(this.getAttribute('data-check'));
});

$('body').on("click", ".dropdown-menu-section", function(e) {
  $(this).parent().is(".open") && e.stopPropagation();
});


$("input[type='checkbox'].section_checkbox").change(function() {
  var a = $("input[type='checkbox'].section_checkbox");
  if (a.length == a.filter(":checked").length) {
    $('.selectall').prop('checked', true);
    $(".select-text").html(' Deselect');
  }
  optionSelected.push({
    label: $(this).next().text().trim(),
    id: $(this).attr('id')
  });
  console.log(optionSelected);
  var totalSection = $('input[name="optionsTopic[]"]:checked').length;
  $(".dropdown-text-section").html(' Resource Type(' + totalSection + ')');
});



$("input[type='checkbox'].relation_checkbox").change(function() {
  var a = $("input[type='checkbox'].relation_checkbox");
  if (a.length == a.filter(":checked").length) {
    $('.selectall').prop('checked', true);
    $(".select-text").html(' Deselect');
  }


  if ($(this).is(':checked')) {
    optionSelected.push({
      label: $(this).next().text().trim(),
      id: $(this).attr('id')
    });
    tagCont.appendChild(createTagItem($(this).next().text().trim(), $(this).attr('id')));
  } else {
    borra($(this).attr('id'));
  }

  console.log(optionSelected);

  var totalRelations = $('input[name="optionsRelations[]"]:checked').length;
  $(".dropdown-text-relations").html('Topic (' + totalRelations + ')');
});

$('.apply').click(function(e) {
  var sections = [];
  $(".section_checkbox:checked").each(function() {
    sections.push(this.value);
  });

  if (sections.length == 0) {
    $(".section_checkbox").each(function() {
      sections.push(this.value);
    });
    var nosectionrelation = true;
  }

  var relations = [];
  $(".relation_checkbox:checked").each(function() {
    relations.push({
      id: this.value,
      type: this.dataset.type,
      category: this.dataset.category,
    });
  });

  var varRelations = JSON.stringify(relations);
  varRelations = varRelations.replace('[', '');
  varRelations = varRelations.replace(']', '');
  var varSections = sections.join(',');
  query = 'sections=' + varSections + '&relations=' + varRelations;
  window.location.search = query;
});


function initOrderBy() {
  const orderBy = document.querySelectorAll('.orderby');
 orderBy.forEach(function(orderSelect) {
    orderSelect.addEventListener('change', function(event) {
      var sections = [];
  $(".section_checkbox:checked").each(function() {
    sections.push(this.value);
  });

  if (sections.length == 0) {
    $(".section_checkbox").each(function() {
      sections.push(this.value);
    });
    var nosectionrelation = true;
  }

  var relations = [];
  $(".relation_checkbox:checked").each(function() {
    relations.push({
      id: this.value,
      type: this.dataset.type,
      category: this.dataset.category,
    });
  });

  var varRelations = JSON.stringify(relations);
  varRelations = varRelations.replace('[', '');
  varRelations = varRelations.replace(']', '');
  var varSections = sections.join(',');
  query = 'sections=' + varSections + '&relations=' + varRelations + '&order=' + this.value;
  window.location.search = query;
    });
  });
}





document.addEventListener("DOMContentLoaded", function() {
  initOrderBy();
  var totalRelations = $('input[name="optionsRelations[]"]:checked').length;
  $(".dropdown-text-relations").html('Topic (' + totalRelations + ')');
  var totalSection = $('input[name="optionsTopic[]"]:checked').length;
  $(".dropdown-text-section").html('Resource Type (' + totalSection + ')');
});


$('#clearall').click(function(event) {
  $('.option').prop('checked', false);
  var optionSelected = [];
  $(".dropdown-text-relations").html('Select topic');
  $("#searchTags").html('');
  $(".dropdown-text-section").html('Select resource type');
  event.preventDefault();
});


</script>

{% endblock %}