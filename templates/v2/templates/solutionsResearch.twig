{% extends '_layout' %}
{% block content %}

{% set  filterOrder      = craft.app.request.getQueryParam('order') %}
{% set  filterTypes      = craft.app.request.getQueryParam('types') %}
{% set filterTopics      = craft.app.request.getQueryParam('topics') %}

{% set filterStartYear   = craft.app.request.getQueryParam('startYear') ?? "1969"|date('Y') %}
{% set filterEndYear     = craft.app.request.getQueryParam('endYear') ?? "now"|date('Y') %}

{% if filterStartYear is same as "" %} {% set filterStartYear = "1969"|date('Y') %} {% endif %}
{% if filterEndYear is same as "" %} {% set filterEndYear = "now"|date('Y') %} {% endif %}

  {% set yearStart = (filterStartYear ~ '-01-01')|atom %}
  {% set yearEnd = (filterEndYear ~ '-12-31')|atom %}

  {% set streamOptions = {
          title: 'Solutions & Research',
          news: false,
          streamType: 'content',
        filterTopics: [{type: 'categories', relations: craft.categories.group('solutionsResearch').level(1), title: 'Topic'}],
        filterTypes: [{type: 'categories', relations: craft.categories.group('solutionsResearchTypes').level(1), title: 'Type'}],
    filterLocations: [{type: 'categories', relations: craft.categories.group('locations').level(1), title: 'Locations'}]
        }
  %}

  {% set entriesTypeAllowed = {   
        videoPlaylist: 'videoPlaylist',
        publicationOverview: 'publicationOverview',
        specialReport: 'specialReport',
        publicationDocument: 'publicationDocument',
        fromTheDirector: 'fromTheDirector',
        endnotes: 'endnotes',
        aboutThisReport: 'aboutThisReport',
        specialReportSingle: 'specialReportSingle',
        gala: 'gala',
        specialReportChaptered: 'specialReportChaptered',
        accordion: 'accordion',
        specialReportCampaign: 'specialReportCampaign',
        article: 'article',
        statePublications: 'statePublications',
        state: 'state',
        city: 'city',
        stateBuilder: 'stateBuilder',
        whatJailsCostLanding: 'whatJailsCostLanding',
        whatJailsCostPage: 'whatJailsCostPage',
        publications: 'publications',
        video: 'video',
        audio: 'audio',
        resourceSite: 'resourceSite',
        specialReports: 'specialReports',
        blogSeries: 'blogSeries',
        blogPosts: 'blogPosts'
      } 
  %}

  {#  Topics  #}
  {% if craft.request.getParam('topics') %}

    {% set topics_ObjsQuery = craft.request.getParam('topics') | split('},') %}
    {% set topics_Objs = [] %}
    {% set topics_Array = [] %}
  

    {% for topic in topics_ObjsQuery %}
      {% if not loop.last %}
        {% set topic = topic~'}' %}
      {% endif %}
      {% set thistopic = topic | json_decode %}
      {% set topics_Objs = topics_Objs|merge([thistopic]) %}
      {% set topics_Array = topics_Array|merge([thistopic["id"]]) %}
    {% endfor %}
  {% endif %}


  {% if topics is not defined and topics_Objs is defined and topics_Objs|length > 0 %}
      {% set topics = [] %}
      {% for topic in topics_Objs %}
        {% if topic.type == 'categories' %}
          {% set topics = topics|merge([{targetElement: craft.categories.id(topic.id).first}]) %}
        {% endif %}
      {% endfor %}
  {% elseif topics_Objs is not defined and topics is not defined %}
      {% set topics = null %}
  {% endif %}




      
  {% set tagsArray = [] %}


  {# LOCATIONS #}

  {% if craft.request.getParam('locations') %}
    {% set locationObjsQuery = craft.request.getParam('locations') | split('},') %}
    {% set location_Objs = [] %}
    {% set location_Array = [] %}

    {% for location in locationObjsQuery %}
      {% if not loop.last %}
        {% set location = location~'}' %}
      {% endif %}
      {% set thislocation   = location | json_decode %}
      {% set location_Objs  = location_Objs|merge([thislocation]) %}
      {% set location_Array = location_Array|merge([thislocation["id"]]) %}
    {% endfor %}
  {% endif %}

  {% if locations is not defined and location_Objs is defined and location_Objs|length > 0 %}
    {% set locations = [] %}
    {% for location in location_Objs %}
      {% if location.type == 'categories' %}
        {% set locations = locations|merge([{targetElement: craft.categories.id(location.id).first}]) %}
      {% endif %}
    {% endfor %}
  {% elseif location_Objs is not defined and locations is not defined %}
      {% set locations = null %}
  {% endif %}



  {# TYPES #}
  {% if craft.request.getParam('types') %}
    {% set typeObjsQuery = craft.request.getParam('types') | split('},') %}
    {% set typeObjs = [] %}
    {% set typeArray = [] %}

    {% for type in typeObjsQuery %}
      {% if not loop.last %}
        {% set type = type~'}' %}
      {% endif %}
      {% set thistype = type | json_decode %}
      {% set typeObjs = typeObjs | merge([thistype]) %}
    {% endfor %}

    {% for type in typeObjs %}
      {% set typeArray = typeArray|merge([type["id"]]) %}
    {% endfor %}

  {% endif %}
  {% if types is not defined and typeObjs is defined and typeObjs|length > 0 %}
    {% set types = [] %}
    {% for type in typeObjs %}
      {% if type.type == 'categories' %}
        {% set types = types|merge([{targetElement: craft.categories.id(type.id).first}]) %}
      {% endif %}
    {% endfor %}
  {% elseif typeObjs is not defined and types is not defined %}
      {% set types = null %}
  {% endif %}
  


    {% set mergedQuery = ['and'] %}

    {% if topics|length >= 1 %}
      {% set topicMerge = [] %}
      {% for topic in topics_Objs %}
          {% set topicMerge = topicMerge|merge(craft.categories.id(topic.id)) %}
          {# Array Tags #}

          {% set topicPush = {
            'category': 'topics',
            'id':topic.id,
            'tag':craft.categories.id(topic.id).first.title
             } 
          %}
          {% set tagsArray = tagsArray|push(topicPush) %}

      {% endfor %}
      {% set mergedQuery = mergedQuery|merge([{targetElement: topicMerge}]) %}
    {% else %}
      {% set topicMerge = [] %}
    {% endif %}


    {% if locations|length >= 1 %}
      {% set locationMerge = [] %}
      {% for location in location_Objs %}
          {% set locationMerge = locationMerge|merge(craft.categories.id(location.id)) %}
          {# Array Tags #}

          {% set locationPush = {
            'category': 'locations',
            'id':location.id,
            'tag':craft.categories.id(location.id).first.title
             } 
          %}
          {% set tagsArray = tagsArray|push(locationPush) %}

      {% endfor %}
      {% set mergedQuery = mergedQuery|merge([{targetElement: locationMerge}]) %}
    {% else %}
      {% set locationMerge = [] %}
    {% endif %}


    {% if types|length >= 1 %}
      {% set typeMerge = [] %}
      {% for type in typeObjs %}
        {% set typeMerge = typeMerge|merge(craft.categories.id(type.id)) %}
        {# Array Tags #}
          {% set typePush = {
            'category': 'types',
            'id':type.id,
            'tag':craft.categories.id(type.id).first.title
             } 
          %}
          {% set tagsArray = tagsArray|push(typePush) %}
        
      {% endfor %}
      {% set mergedQuery = mergedQuery|merge([{targetElement: typeMerge}]) %}
    {% else %}
      {% set typeMerge = [] %}
    {% endif %}


  {# 
    Sections
  #}
  {% set searchSections = [] %}
  {% for section in entriesTypeAllowed %}
    {% set searchSections = searchSections|merge([section]) %}
  {% endfor %}

 {% if (types|length < 1) and (locations|length < 1) and (topics|length < 1) %}
    {% set queryObj = {
      section: searchSections,
      postDate : (['and', '>=' ~ yearStart , '<=' ~ yearEnd]),
      }
    %}
{% else %}
  {% set queryObj = {
      relatedTo: mergedQuery,
      section: searchSections,
      postDate : (['and', '>=' ~ yearStart , '<=' ~ yearEnd]),
      }
    %}
{% endif %}

{# section('and, not this, not that') #}

{% set totalEntries = craft.entries(queryObj).type(entriesTypeAllowed).limit(10).count() %}

{% if filterOrder == 'newest' %}
  {% paginate craft.entries(queryObj).type(entriesTypeAllowed).orderBy('postDate DESC').limit(10) as pageInfo, pageEntries %}
{% elseif  filterOrder =="oldest" %}
  {% paginate craft.entries(queryObj).type(entriesTypeAllowed).orderBy('postDate ASC').limit(10) as pageInfo, pageEntries %}
{% else %}
  {% paginate craft.entries(queryObj).type(entriesTypeAllowed).orderBy('postDate DESC').limit(10) as pageInfo, pageEntries %}
{% endif %}


<!-- Hero Block -->
  <div class="heroType1-container"  {% if entry.heroType1_image %}style="background-image: url('{{ entry.heroType1_image.first.url }}');"{% endif %}>
    <div class="heroType1-block-bg"></div>
    <div class="heroType1-block-box">
      <div class="heroType1-block-box-content">
          <div class="heroType1-block-breadcrumbs">
            {% if entry.level > 1 %}
                <a href="{{ siteUrl }}">HOME</a>
                {% for crumb in entry.getAncestors() %}
                  {{ crumb.getLink() }}
                {% endfor %}
            {% else %}
            <a href="{{ siteUrl }}">HOME</a>
            {% endif %}
          </div>
          <div class="heroType1-block-title">
            <h1>{{ entry.heroType1_title }}</h1>
          </div>
      </div>
    </div>
    
    {#  Image Attribution #}
      {%- if entry.contentDetail_heroImage and entry.contentDetail_heroImage.first.attribution -%}
        <div class="imageAttrib">
	        <div class="imageAttrib-wrap">
            {%- if entry.contentDetail_heroImage.first.attributionLink -%}
              <a href="{{ entry.contentDetail_heroImage.first.attributionLink }}" target="_blank"> {{- entry.contentDetail_heroImage.first.attribution -}}</a>
            {%- else -%}
              {{- entry.contentDetail_heroImage.first.attribution -}}
            {%- endif -%}
          </div>
	      </div>
      {%- endif -%}
    {#  Image Attribution #}    
    
  </div>
<!-- END Hero Block -->


{% set myEntryQuery = craft.entries().section('blogPosts').orderBy('dateCreated DESC') %}

  <div class="rs-page">
    <section class="rs-head-container">
      <div class="rs-headContent">
        <div class="rs-headContent-title">
          <h4>{{ entry.rs_headline }}</h4>
          <div class="rs-headContent-title-copy">
            {{ entry.rs_copy }}
          </div>
        </div>

        <h3 class="rs-title">Solutions &<br> Research</h3>

        <div class="rs-head-form">

          <div class="filter-by">FILTER BY</div>
          <div class="mobile-filter-by">Sort & Filter</div>
          
          <button class="close-rs-filter"></button>

          <div class="rs-filters">
            {% include 'v2/templates/solutionsResearch/filterTopic' %}
            {% include 'v2/templates/solutionsResearch/filterTypes' %}
            {% include 'v2/templates/solutionsResearch/filterLocations' %}
            {% include 'v2/templates/solutionsResearch/filterDate' %}
          </div>



        <div class="mobile-filter-sort">
          <hr>
            <label for="orderby" >Sort by</label>
            <select type="text" class="orderby"> 
              <option value="newest" {% if filterOrder == 'newest' %} selected {% endif %}>Newest</option>
              <option value="oldest" {% if filterOrder == 'oldest' %} selected {% endif %}>Oldest</option>
            </select>
        </div> 


        <div class="mobile-filter-submit">
          <button type="button"  class="filterSubmit apply ctaSearch"><span>Show Results</span></button>
        </div>
          <div class="rs-tags">
             <a href="{{ siteUrl }}solutions-research" id="clearall">Clear all </a>
             <div id="searchTags">
                {% for tag in tagsArray %}
                  <a data-check="{{ tag.id }}" data-category="{{ tag.category }}" href="#" class="filterTags">{{ tag.tag }}</a>
                {% endfor %}
             </div>
          </div>
        </div>



        <div class="rs-head-form-mobile">
          <button type="button" class="filter" id="sortFilter" ><span>Sort & filter</span></button>
        </div>
      </div>
    </section>

    <section class="rs-listing">
      <div class="rs-listing-content ">
        {% if entry.newsHero_article|length %}

        {% set heroNews = entry.newsHero_article.one() %}
        <div class="rs-listing-hero {% if craft.request.queryString|length > 20 %}d-none{% endif %}">
          <div class="rs-listing-hero-container">
            <div class="rs-listing-hero-image">
              <img src="{{ entry.newsHero_image.first.url }}" alt="">
            </div>
            <div class="rs-listing-hero-copy">
              <div>
                <div class="rs-listing-hero-copy-category">       
                  <p>{{ heroNews.type.name | title | upper }}</p>
                </div>
                <div class="rs-listing-hero-copy-title">
                  <a href="{{ heroNews.url }}">
                    <h4>{{ entry.newsHero_title }}</h4>
                  </a>
                </div>

                <div class="rs-listing-hero-copy-excerpt">
                    {% if entry.newsHero_subtitle %}
                     <p>{{ entry.newsHero_subtitle }}</p>
                    {% endif %}
                </div>

                <div class="rs-listing-hero-copy-date">
                  <p>{{ heroNews.postDate | date("M d, Y") }}</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      {% else %}
      
      {% set mainNews = craft.entries().section('blogPosts').one() %}
        {% if  mainNews.streamImageRectangle is not null %}
          {% set imageN =  mainNews.streamImageRectangle.one() %}
        {% else %}
          {% set imageN = null %}
        {% endif %}

      <div class="rs-listing-hero">
            <div class="rs-listing-hero-container">
              <div class="rs-listing-hero-image">
                <img src="{{ imageN.url }}" alt="">
              </div>
              <div class="rs-listing-hero-copy">
                <div>
                  <div class="rs-listing-hero-copy-category">
                    <p>{{ mainNews.type.name | title | upper }}</p>
                  </div>
                  <div class="rs-listing-hero-copy-title">
                    <a href="">
                      <h4>{{ mainNews.title }}</h4>
                    </a>
                  </div>

                  <div class="rs-listing-hero-copy-excerpt">
                      <p>{{ mainNews.subtitle }}</p>
                  </div>

                  <div class="rs-listing-hero-copy-date">
                    <p> {{ mainNews.postDate | date("M d, Y") }}</p>
                  </div>

                </div>
              </div>
            </div>
          </div>
      {% endif %}


    <div class="rs-listing-filter">
      <label for="orderby">Sort by</label>
      <select type="text" class="orderby"> 
        <option value="newest" {% if filterOrder == 'newest' %} selected {% endif %}>Newest</option>
        <option value="oldest" {% if filterOrder == 'oldest' %} selected {% endif %}>Oldest</option>
      </select>
    </div>

    <div class="rs-listing-items">    
    {% set fallback = 0 %}
     {% for result in pageEntries %}

          {% set image = result.streamImageRectangle.one() ?? null %}

          <div class="rs-listing-item">
            <div class="rs-listing-item-wrapper">
              <div class="rs-listing-item-cat">
                <span>
                   {% if result.type.handle in ['specialReportSingle','specialReportChaptered','specialReport','specialReportCampaign'] %}
                      <p>Special Report</p>
                    {% else %}
                      <p>{{ result.type.name | title | upper }}</p>
                  {% endif %}
                </span>
              </div>
              <div class="rs-listing-item-content">

                <div class="rs-listing-item-content-date">
                  {{ result.postDate | date("M d, Y") }}
                </div>

                <a href="{{ result.url }}"  class="rs-listing-item-content-title" target="_blank"><h6 class="c-black">{{ result.title }}</h6></a>
                <p class="rs-listing-item-content-copy">
                  {% switch result.type.handle %}
                    {% case 'publicationOverview' %}
                          {{ result.subtitle }}
                    {% case 'audio' %}
                          {{ result.overview|striptags|truncate(120)|raw }}
                    {% case 'video' %}
                          {{ result.overview|striptags|truncate(120)|raw }}
                    {% case 'videoPlaylist' %}
                          {{ result.overview|striptags|truncate(120)|raw }}
                    {% case 'resourceSite' %}
                          {{ result.overview|striptags|truncate(120)|raw }}
                    {% case 'specialReport' %}
                          {{ result.overview|striptags|truncate(120)|raw }}
                    {% case 'specialReportChaptered' %}
                          {{ result.overview|striptags|truncate(120)|raw }}
                          {% if result.heroImage is not null %}
                            {% set image = result.heroImage.one() %}
                          {% elseif result.streamImageSquare is not null %}
                             {% set image = result.streamImageSquare.one() %}
                          {% endif %}
                    {% case 'specialReportSingle' %}
                          {% if result.heroImage is not null %}
                            {% set image = result.heroImage.one() %}
                          {% elseif result.streamImageSquare is not null %}
                             {% set image = result.streamImageSquare.one() %}
                          {% endif %}   
                    {% case 'article' %}
                          {% if result.heroImage is not null %}
                            {% set image = result.heroImage.one() %}
                          {% endif %}                                              
                    {% case 'story' %}
                          {% if result.storiesSubtitle | length > 1 %}
                            {{ result.storiesSubtitle|striptags|truncate(120)|raw }}
                          {% elseif  result.overview | length > 1 %}
                              {{ result.overview|striptags|truncate(120)|raw }}
                          {% elseif result.specialReportsArticle.type('copy').first()  | length > 1 %}
                              {{ result.specialReportsArticle.type('copy').first().text|striptags|truncate(120)|raw }}
                          {% endif %}
                    {% default %}
                        <!-- {{ result.type.handle }} -->
                  {% endswitch %}
                </p>
              </div>


              <div class="rs-listing-item-image">
                {% if image is not null %}
                 
                {% else %}
                  {% set image = null %}
                {% endif %}


                {% if image %}
                        <img src="{{ image.getUrl('thumbnailVertical') }}" alt=""/>
                    {% else %}
                      {% if fallback <= 3 %}
                          {% set fallback =  fallback + 1 %}
                      {% else %}
                          {% set fallback = 1 %}
                      {% endif %}
                      {% include 'v2/common/placeHolderImg' with 
                        { 
                          indexColor: fallback,  
                        } 
                      %}
                    {% endif %}
                    {% if result.type.handle == 'blogSeries' %}
                    
                     <img src="/dist/img/v2/series.svg" class="series-icon">
                    
                {% endif %}
              </div>
            </div>
          </div>
     {% endfor %}

      </div>

        <div class="rs-paginate">

          {% if pageInfo.prevUrl %}
            <a href="{{ pageInfo.prevUrl }}" class="rs-paginate-item-prev">Prev</a>
          {% else %}
            <a href="{{ pageInfo.firstUrl }}" class="rs-paginate-item-prev">Prev</a>
          {% endif %}

          {% for page, url in pageInfo.getPrevUrls(4) %}
            <a href="{{ url }}" class="rs-paginate-item">{{ page }}</a>
          {% endfor %}

          <span class="rs-paginate-item--current">{{ pageInfo.currentPage }}</span>

          {% for page, url in pageInfo.getNextUrls(4) %}
            <a href="{{ url }}" class="rs-paginate-item">{{ page }}</a>
          {% endfor %}

          {% if pageInfo.nextUrl %}<a href="{{ pageInfo.nextUrl }}" class="rs-paginate-item-next">Next</a>{% endif %}
        </div>
        <div class="rs-paginate-counter"> {{ pageInfo.currentPage * 10 - 9 }}-{{ pageInfo.currentPage * 10 }} of {{ totalEntries }} results </div>

      </div>
    </section>
  </div>





<script>

$("#menuTopics").on('click',function(){
  var CheckT = $("#menuTopics").attr("aria-expanded");
   if ( CheckT == "true") {
      $("#menuTopics").attr("aria-expanded", "false");
      $("#listTopics").attr("aria-hidden", "true");
 } else {
      $("#menuTopics").attr("aria-expanded", "true");
      $("#listTopics").attr("aria-hidden", "false");
 }
});


$("#menuTypes").on('click',function(){
  var CheckR = $("#menuTypes").attr("aria-expanded");
 if ( CheckR == "true") {
      $("#menuTypes").attr("aria-expanded", "false");
      $("#listTypes").attr("aria-hidden", "true");
 } else {
      $("#menuTypes").attr("aria-expanded", "true");
      $("#listTypes").attr("aria-hidden", "false");
 }
});


$("#menuLocations").on('click',function(){
  var CheckR = $("#menuLocations").attr("aria-expanded");
 if ( CheckR == "true") {
      $("#menuLocations").attr("aria-expanded", "false");
      $("#listLocations").attr("aria-hidden", "true");
 } else {
      $("#menuLocations").attr("aria-expanded", "true");
      $("#listLocations").attr("aria-hidden", "false");
 }
});
</script>


<script>

var optionSelected = [];
let tagCont    = document.getElementById('searchTags');
var sortMobile = document.querySelector('#sortFilter');
var header     = document.querySelector('.header-v2-mobile');
var rsForm     = document.querySelector('.rs-head-form');
var html       = document.querySelector(':root');
var closersFilter     = document.querySelector('.close-rs-filter');


sortMobile.addEventListener('click', function (event) {
 header.classList.toggle('hidden');
 rsForm.classList.toggle('show');
 window.scrollTo({ top: 0, behavior: 'smooth' });
 html.classList.toggle('overflowHidden');
 console.log('2');
});

closersFilter.addEventListener('click', function (event) {
 header.classList.toggle('hidden');
 rsForm.classList.toggle('show');
 html.classList.toggle('overflowHidden');
});


  // Create Tag
  function createTagItem(name, id, cat) {
    let a = document.createElement('a');
    a.textContent = name;
    a.setAttribute("data-check", id);
    a.setAttribute("data-category", cat);
    a.setAttribute("href", '#');
    a.setAttribute("class", 'filterTags');
    return a;
  }

  // Delete Tag
  function deleteTagItem(t) {
    $.each(optionSelected, function(i) {
      if (optionSelected[i].id === t) {
        optionSelected.splice(i, 1);
        return false;
      }
    });
    document.querySelector('[data-check="' + t + '"]').remove();
  }


  $('body').on("click", ".dropdown-menu-section", function(e) {
    $(this).parent().is(".open") && e.stopPropagation();
  });

  $(document).on('click', '.filterTags', function(event) {

    event.preventDefault();
    console.log(this.getAttribute('data-check'));
    document.getElementById(this.getAttribute('data-check')).checked = false;
    deleteTagItem(this.getAttribute('data-check'));

    switch (this.getAttribute('data-category')) {
      case 'topics':
         var totalTopics = $('input[name="optionsTopics[]"]:checked').length;
         console.log(totalTopics);
         if(totalTopics>=1){
          $(".dropdown-text-topics").html('Topic (' + totalTopics + ')');
         }else{
          $(".dropdown-text-topics").html('Select Topic');
         }
        break;
      case 'locations':
          var totalLocations = $('input[name="optionsLocations[]"]:checked').length;
          if(totalLocations>=1){
            $(".dropdown-text-locations").html('Geographic Areas (' + totalLocations + ')');
          }else{
            $(".dropdown-text-locations").html('Select geographic area');
          }
        break;

      case 'types':
          var totalTypes = $('input[name="optionsTypes[]"]:checked').length;
          if(totalTypes>=1){
           $(".dropdown-text-types").html(' Resource Type(' + totalTypes + ')');
          }else{
           $(".dropdown-text-types").html('Resource Type');
          }
        break;
    }
        
  });





//Topics
$("input[type='checkbox'].topics_checkbox").change(function() {
  
  var a = $("input[type='checkbox'].topics_checkbox");
  if ($(this).is(':checked')) {
    optionSelected.push({
      label: $(this).next().text().trim(),
      id: $(this).attr('id'),
      category: $(this).data('category'),
    });

    tagCont.appendChild(createTagItem($(this).next().text().trim(), $(this).attr('id'), $(this).data('category')));
    console.log($(this).data('category'));

  } else {
    deleteTagItem($(this).attr('id'));
  }

  //console.log(optionSelected);

  var totalTopics = $('input[name="optionsTopics[]"]:checked').length;

  if(totalTopics>=1){
   $(".dropdown-text-topics").html('Topic (' + totalTopics + ')');
  }else{
   $(".dropdown-text-topics").html('Select Topic');
  }
});


// Types
$("input[type='checkbox'].type_checkbox").change(function() {

  var a = $("input[type='checkbox'].type_checkbox");
  if ($(this).is(':checked')) {
    optionSelected.push({
      label: $(this).next().text().trim(),
      id: $(this).attr('id')
    });

    tagCont.appendChild(createTagItem($(this).next().text().trim(), $(this).attr('id'), $(this).data('category')));

  } else {
    deleteTagItem($(this).attr('id'));
  }
  
  //console.log(optionSelected);

  var totalTypes = $('input[name="optionsTypes[]"]:checked').length;
  if(totalTypes>=1){
   $(".dropdown-text-types").html(' Resource Type(' + totalTypes + ')');
  }else{
   $(".dropdown-text-types").html('Resource Type');
  }
});



// For Locations
$("input[type='checkbox'].location_checkbox").change(function() {

  var a = $("input[type='checkbox'].location_checkbox");

  if ($(this).is(':checked')) {
    optionSelected.push({
      label: $(this).next().text().trim(),
      id: $(this).attr('id')
    });
    tagCont.appendChild(createTagItem($(this).next().text().trim(), $(this).attr('id'), $(this).data('category')));
  } else {
    deleteTagItem($(this).attr('id'));
  }

 // console.log(optionSelected);
  var totalLocations = $('input[name="optionsLocations[]"]:checked').length;
  if(totalLocations>=1){
   $(".dropdown-text-locations").html('Geographic Areas (' + totalLocations + ')');
  }else{
   $(".dropdown-text-locations").html('Select geographic area');
  }
});









$('.ctaSearch').click(function(e) {

  var startYear  = document.getElementById('dateStart').value;
  var endYear    = document.getElementById('dateEnd').value;

  // Topics
  var topics = [];
  $(".topics_checkbox:checked").each(function() {
    topics.push({
      id: this.value,
      type: this.dataset.type,
      category: this.dataset.category,
    });
  });

  var varTopics = JSON.stringify(topics);
      varTopics = varTopics.replace('[', '');
      varTopics = varTopics.replace(']', '');
     // varTopics = varTopics.replaceAll('"', '');


  // Types
  var types = [];
  $(".type_checkbox:checked").each(function() {
    types.push({
      id: this.value,
      type: this.dataset.type,
      category: this.dataset.category,
    });
  });

  var varTypes = JSON.stringify(types);
      varTypes = varTypes.replace('[', '');
      varTypes = varTypes.replace(']', '');

  // Locations
  var locations = [];
  $(".location_checkbox:checked").each(function() {
    locations.push({
      id: this.value,
      type: this.dataset.type,
      category: this.dataset.category,
    });
  });
  var varLocations = JSON.stringify(locations);
      varLocations = varLocations.replace('[', '');
      varLocations = varLocations.replace(']', '');

  query = 'startYear='+startYear+'&endYear='+endYear+'&locations='+varLocations+'&topics='+varTopics+'&types='+varTypes;
  window.location.search = query;
});




function initOrderBy() {


  var orderBy = document.querySelectorAll('.orderby');
    
    orderBy.forEach(function(orderSelect) {

      orderSelect.addEventListener('change', function(event) {

      var startYear  = document.getElementById('dateStart').value;
      var endYear    = document.getElementById('dateEnd').value;


        // Types
        var types = [];
        $(".type_checkbox:checked").each(function() {
          types.push({
            id: this.value,
            type: this.dataset.type,
            category: this.dataset.category,
          });
        });

        var varTypes = JSON.stringify(types);
            varTypes = varTypes.replace('[', '');
            varTypes = varTypes.replace(']', '');
        //    varTypes = varTypes.replaceAll('"', '');



        // Locations
        var locations = [];
        $(".location_checkbox:checked").each(function() {
          locations.push({
            id: this.value,
            type: this.dataset.type,
            category: this.dataset.category,
          });
        });
        var varLocations = JSON.stringify(locations);
            varLocations = varLocations.replace('[', '');
            varLocations = varLocations.replace(']', '');
        //    varLocations = varLocations.replaceAll('"', '');

            console.log(startYear);
            console.log(endYear);

        query = 'startYear='+startYear+'&endYear='+endYear+'&locations='+varLocations+'&topics='+varTopics+'&types='+varTypes+'&order='+this.value;
        window.location.search = query;

      });
    });

}


document.addEventListener("DOMContentLoaded", function() {

  initOrderBy();

  var totalTopics = $('input[name="optionsTopics[]"]:checked').length;
  if(totalTopics>=1){
   $(".dropdown-text-topics").html('Topic (' + totalTopics + ')');
  }else{
   $(".dropdown-text-topics").html('Select Topic');
  }
  console.log(totalTopics);


  var totalTypes = $('input[name="optionsTypes[]"]:checked').length;
  if(totalTypes>=1){
    $(".dropdown-text-types").html('Resource Type (' + totalTypes + ')');
  }else{
    $(".dropdown-text-types").html('Resource Type');
  }
  console.log(totalTypes);


  var totalLocations = $('input[name="optionsLocations[]"]:checked').length;
  if(totalLocations>=1){
    $(".dropdown-text-locations").html('Geographic Areas (' + totalLocations + ')');
  }else{
    $(".dropdown-text-locations").html('Select geographic area');
  }
  console.log(totalLocations);

  const dateStartInput = document.getElementById('dateStart');
  const datepickerStart = new Datepicker(dateStartInput, {
        autohide: true,
        daysOfWeekDisabled: [],
        daysOfWeekHighlighted: [],
        pickLevel: 2,
        format: 'yyyy',
        defaultViewDate: '1969',
        minDate: '1969',
        nextArrow: '>>',
        prevArrow: '<<',
        todayBtn: false,
        todayBtnMode: 1,
        todayHighlight: true
  }); 

  const dateStartEnd = document.getElementById('dateEnd');
  const datepickerEnd = new Datepicker(dateStartEnd, {
        autohide: true,
        daysOfWeekDisabled: [],
        daysOfWeekHighlighted: [],
        pickLevel: 2,
        format: 'yyyy',
        maxDate:'today',
        nextArrow: '>>',
        prevArrow: '<<',
        todayBtn: false,
        todayBtnMode: 1,
        todayHighlight: true
  }); 
      
});
</script>


{% js %}
{% endjs %}


{% endblock %}