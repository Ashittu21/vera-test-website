{"version":3,"sources":["components/city-switcher/city-switcher.js","components/app/app.js","serviceWorker.js","index.js","components/heading.js","components/budget/budget.js","components/app/ConsolidatedExp_72PoliceDepartments.csv","components/budget/useBudgetReducer.js","components/carrot/index.js","components/carrot/carrot.svg","components/budget/index.js"],"names":["CitySwitcher","data","selectData","dataByCity","yearByCity","slugTitle","cityOptions","Object","keys","map","d","value","label","preselectedCity","window","PoliceBudgetCity","preselectedOption","find","useState","city","setCity","cityLabel","budgetYear","className","options","onChange","year","slug","trim","toLowerCase","replace","uid","department","expensecat","subdep","expensedescrip","personneltype","total","parseInt","reduce","r","push","dataByCategory","organizeBudget","console","log","groupByKey","forEach","category","description","key","rows","App","useCsv","dataSrc","src","setData","useEffect","fetch","then","res","text","csvParse","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","LevelContext","createContext","HDown","props","Consumer","level","Provider","children","H","Heading","Math","min","formatDollars","Intl","NumberFormat","style","currency","minimumFractionDigits","format","round","Budget","state","setValue","useContext","sort","a","b","aval","getTotal","bval","changes","length","Array","isArray","marginLeft","before","after","LineItem","title","bottomUid","nextLevel","nextLevelDown","nextIsParent","indexOf","module","hot","open","setOpen","toggleOpen","hasChange","Fragment","onClick","Adjust","max","step","enableMobileNumericKeyboard","sumRows","values","co","useBudgetReducer","reset","beforeLabel","Total","subvalues","isTop","exports","reducer","action","type","initialState","useStorageReducer","localStorage","dispatch","carrotSrc"],"mappings":"mPA4CeA,EAvCM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACmBC,EAAWD,GAAjDE,EADmB,EACzBF,KAAkBG,EADO,EACPA,WAAYC,EADL,EACKA,UAChCC,EAAcC,OAAOC,KAAKH,GAAWI,KAAI,SAACC,GAAD,MAAQ,CACrDC,MAAOD,EACPE,MAAOP,EAAUK,OAEbG,EAAkBC,OAAOC,kBAAoB,KAC7CC,EACJH,GAAmBP,EAAYW,MAAK,SAACP,GAAD,OAAOA,EAAEC,QAAUE,KARxB,EASTK,mBACtBF,EACIA,EAAkBL,MAClBL,EAAYW,MAAK,kBAAyB,eAAzB,EAAGN,SAAoCA,OAZ7B,mBAS1BQ,EAT0B,KASpBC,EAToB,KAe3BC,EAAYhB,EAAUc,GACtBG,EAAalB,EAAWe,GAE9B,OACE,yBAAKI,UAAU,iBACXP,GACA,kBAAC,IAAD,CACEQ,QAASlB,EACTK,MAAOL,EAAYW,MAAK,qBAAGN,QAAsBQ,KACjDM,SAAU,SAACd,GACTS,EAAQT,EAAMA,UAIpB,kBAAC,IAAD,CACEU,UAAWA,EACXF,KAAMA,EACNO,KAAMJ,EACNrB,KAAME,EAAWgB,OAQnBjB,EAAa,SAACD,GAClB,IAAMI,EAAY,GAiBZF,EAhBcF,EAAKQ,KAAI,SAACC,GAC5B,IAAMiB,EAAI,UAAMjB,EAAES,KACfS,OACAC,cACAC,QAAQ,MAAO,IACfA,QAAQ,MAAO,KAJR,YAIgBpB,EAAC,SAAakB,OAAOC,eAI/C,OAHKxB,EAAUsB,KACbtB,EAAUsB,GAAV,UAAqBjB,EAAES,KAAKS,OAA5B,aAAuClB,EAAC,SAAakB,SAEhD,2BACFlB,GADL,IAEEqB,IAAI,GAAD,OAAKrB,EAAEsB,WAAP,YAAqBtB,EAAEuB,WAAvB,YAAqCvB,EAAEwB,OAAvC,YAAiDxB,EAAEyB,eAAnD,YAAqEzB,EAAE0B,eAC1ET,OACAU,MAAOC,SAAS5B,EAAE2B,YAGSE,QAAO,SAACC,EAAG9B,GAKxC,OAJK8B,EAAE9B,EAAEiB,QACPa,EAAE9B,EAAEiB,MAAQ,IAEda,EAAE9B,EAAEiB,MAAMc,KAAK/B,GACR8B,IACN,IACGpC,EAAaG,OAAOC,KAAKL,GAAYoC,QAAO,SAACC,EAAG9B,GAEpD,OADA8B,EAAE9B,GAAKP,EAAWO,GAAG,GAAGgB,KACjBc,IACN,IAEGE,EAAiBC,EAAexC,GAItC,OAFAyC,QAAQC,IAAIH,GAEL,CACLzC,KAAMyC,EACNtC,aACAC,cAIEsC,EAAiB,SAAC1C,GACtB,OAAOM,OAAOC,KAAKP,GAAMsC,QAAO,SAACC,EAAGrB,GA4BlC,OA3BAqB,EAAErB,GAAQ2B,EAAW,aAAc7C,EAAKkB,IACxCZ,OAAOC,KAAKgC,EAAErB,IAAO4B,SAAQ,SAACf,GAC5BQ,EAAErB,GAAMa,GAAcc,EAAW,aAAcN,EAAErB,GAAMa,IAEvDzB,OAAOC,KAAKgC,EAAErB,GAAMa,IAAae,SAAQ,SAACC,GACxCR,EAAErB,GAAMa,GAAYgB,GAAYF,EAC9B,SACAN,EAAErB,GAAMa,GAAYgB,IAGtBzC,OAAOC,KAAKgC,EAAErB,GAAMa,GAAYgB,IAAWD,SAAQ,SAACb,GAClDM,EAAErB,GAAMa,GAAYgB,GAAUd,GAAUY,EACtC,iBACAN,EAAErB,GAAMa,GAAYgB,GAAUd,IAGhC3B,OAAOC,KAAKgC,EAAErB,GAAMa,GAAYgB,GAAUd,IAASa,SACjD,SAACE,GACCT,EAAErB,GAAMa,GAAYgB,GAAUd,GAAQe,GAAeH,EACnD,gBACAN,EAAErB,GAAMa,GAAYgB,GAAUd,GAAQe,gBAO3CT,IACN,KAGCM,EAAa,SAACI,EAAKC,GACvB,OAAOA,EAAKZ,QAAO,SAACC,EAAG9B,GAKrB,OAJK8B,EAAE9B,EAAEwC,MACPV,EAAE9B,EAAEwC,IAAQ,IAEdV,EAAE9B,EAAEwC,IAAMT,KAAK/B,GACR8B,IACN,KCjHUY,EARH,WACV,IAAMnD,EAAOoD,EAAOC,KACpB,OAAKrD,EAGE,kBAAC,EAAD,CAAcA,KAAMA,IAFlB,yCAOLoD,EAAS,SAACE,GAAS,IAAD,EACErC,qBADF,mBACfjB,EADe,KACTuD,EADS,KAStB,OAPAC,qBAAU,WACRC,MAAMH,GACHI,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACLJ,EAAQM,YAASF,SAEpB,CAACJ,EAASD,IACNtD,GCbW8D,QACW,cAA7BjD,OAAOkD,SAASC,UAEe,UAA7BnD,OAAOkD,SAASC,UAEhBnD,OAAOkD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,kBD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBd,MAAK,SAAAe,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjC,QAAQiC,MAAMA,EAAMC,a,wFEzI5B,0HAEaC,EAAeC,wBAAc,GAE7BC,EAAQ,SAACC,GACpB,OACE,kBAACH,EAAaI,SAAd,MACG,SAACC,GAAD,OACC,kBAACL,EAAaM,SAAd,CAAuB1E,MAAOyE,EAAQ,GACnCF,EAAMI,cAMJC,EAAI,SAACL,GAChB,OACE,kBAACH,EAAaI,SAAd,MACG,SAACC,GACA,IAAMI,EAAU,IAAMC,KAAKC,IAAIN,EAAO,GACtC,OAAO,kBAACI,EAAYN,Q,6LCZfS,EAAgB,SAAChF,GAAD,OAC3B,IAAIiF,KAAKC,aAAa,QAAS,CAC7BC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IACtBC,OAAOR,KAAKS,MAAMvF,KAKjBwF,EAAS,SAATA,EAAU,GAA+B,IAA7BlG,EAA4B,EAA5BA,KAAMmG,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvBjB,EAAQkB,qBAAWvB,KACnBvE,EAAOD,OAAOC,KAAKP,GAAMsG,MAG/B,SAAqBC,EAAGC,GACtB,IAAMC,EAAOC,EAAS1G,EAAKuG,IACrBI,EAAOD,EAAS1G,EAAKwG,IAE3B,OAAIC,EAAOE,GACD,EACCF,EAAOE,EACT,EAEA,KAXHC,EAAYT,EAAZS,QAeR,OAAoB,IAAhBrG,EAAKsG,QAAiBC,MAAMC,QAAQ/G,EAAKO,EAAK,KAIhD,kBAAC,IAAD,KACE,yBAAKsF,MAAO,CAAEmB,WAAW,GAAD,OAAK7B,EAAQ,EAAI,IAAM,EAAvB,SACrB5E,EAAKC,KAAI,SAACyC,GACT,GAAI6D,MAAMC,QAAQ/G,EAAKiD,IAAO,CAC5B,IAAMgE,EAASP,EAAS1G,EAAKiD,IACvBiE,EAAQR,EAAS1G,EAAKiD,GAAM2D,GAC5B9E,EAAM9B,EAAKiD,GAAK,GAAGnB,IAEzB,OACE,kBAACqF,EAAD,CACElE,IAAKA,EACLmE,MAAOnE,EACPvC,MAAOkG,EAAQ9E,GACfsE,SAAUA,EAAStE,GACnBmF,OAAQA,EACRC,MAAOA,IAIX,IAAMpF,EA0HlB,SAASuF,EAAUrH,GACjB,OAAI8G,MAAMC,QAAQ/G,GACTA,EAAK,GAAG8B,IAERuF,EAAUrH,EAAKM,OAAOC,KAAKP,GAAM,KA9HpBqH,CAAUrH,EAAKiD,IACrBqE,EAAYC,EAAcvH,EAAKiD,IAC/BgE,EAASP,EAAS1G,EAAKiD,IACvBiE,EAAQR,EAAS1G,EAAKiD,GAAM2D,GAE5BY,EACJxH,EAAKO,EAAKA,EAAKkH,QAAQxE,GAAO,KAC9BsE,EAAcvH,EAAKO,EAAKA,EAAKkH,QAAQxE,GAAO,KAE9C,OACE,kBAACkE,EAAD,CACElE,IAAKA,EACLmE,MAAOnE,EACPqE,UAAWA,EACXE,aAAcA,EACd9G,MAAOkG,EAAQ9E,GACfsE,SAAUA,EAAStE,GACnBmF,OAAQA,EACRC,MAAOA,GAENI,GACC,yBAAKhG,UAAU,uBACb,kBAAC4E,EAAD,CACElG,KAAMsH,EACNnB,MAAOA,EACPC,SAAUA,WA/CrB,kBAACF,EAAD,CAAQlG,KAAMA,EAAKO,EAAK,IAAK4F,MAAOA,EAAOC,SAAUA,KA4D1De,EAAW,SAAC,GASX,IARLG,EAQI,EARJA,UACAE,EAOI,EAPJA,aACAJ,EAMI,EANJA,MACA1G,EAKI,EALJA,MACA0F,EAII,EAJJA,SACAa,EAGI,EAHJA,OACAC,EAEI,EAFJA,MACA7B,EACI,EADJA,SACI,EACoBpE,qBAAWyG,EAAOC,KADtC,mBACGC,EADH,KACSC,EADT,KAEEC,EAAa,kBAAMD,GAASD,IAC5BG,EAAYd,IAAWC,EAC7B,OACE,kBAAC,IAAMc,SAAP,KACE,yBACE1G,UAAS,gCACNgG,EAA6C,GAAjC,+BADN,YAELE,EAAe,8BAAgC,GAF1C,YAGPO,EAAY,mCAAqC,GAH1C,eAOT,yBAAKzG,UAAU,iCACZgG,EACC,4BACEhG,UAAS,uCACPsG,EAAO,UAAY,IAErBK,QAASH,GAET,kBAAC,IAAD,MACA,kBAAC,IAAD,KAAIV,IAGN,kBAAC,IAAD,KAAIA,IAGR,yBAAK9F,UAAU,gCACXgG,GAGCM,GACC,4BACEtG,UAAS,8CACPsG,EAAO,UAAY,IAErBK,QAASH,GAJX,UAHF,kBAACI,EAAD,CAAQxH,MAAOA,EAAOc,SAAU4E,KAcpC,yBAAK9E,UAAU,gCACZoE,EAAcuB,IAEjB,yBAAK3F,UAAU,+BACZoE,EAAcwB,KAGlBU,GAAQvC,IAKT6C,EAAS,SAAC,GAAyB,IAAvBxH,EAAsB,EAAtBA,MAAOc,EAAe,EAAfA,SACvB,OACE,yBAAKF,UAAU,uBACb,yBAAKA,UAAU,6BACb,kBAAC,IAAD,CACEmE,KAAM,IACN0C,IAAK,IACLC,KAAM,EACN1H,MAAOA,EACPc,SAAUA,EACV6G,6BAA2B,IAP/B,OAuBN,SAASd,EAAcvH,GACrB,GAAI8G,MAAMC,QAAQ/G,GAChB,OAAO,KAET,IAAMO,EAAOD,OAAOC,KAAKP,GACzB,OAAoB,IAAhBO,EAAKsG,OACAU,EAAcvH,EAAKO,EAAK,KAE1BP,EAGF,IAAM0G,EAAW,SAAXA,EAAY1G,EAAM4G,GAC7B,OAAIE,MAAMC,QAAQ/G,GACTsI,EAAQtI,GAEVM,OAAOiI,OAAOvI,GAAMsC,QAAO,SAACC,EAAG9B,GACpC,OAAO8B,GAAKuE,MAAMC,QAAQtG,GAAK6H,EAAQ7H,GAAKiG,EAASjG,EAAGmG,MACvD,GAEH,SAAS0B,EAAQpF,GACf,OAAOA,EAAKZ,QAAO,SAACC,EAAG9B,GACrB,IAAM+H,EAAK5B,GAAWA,EAAQnG,EAAEqB,KAAO,EAAI8E,EAAQnG,EAAEqB,KAAO,IAAM,EAClE,OAAOS,EAAI9B,EAAE2B,MAAQoG,IACpB,KAIQ,gBAAsC,IAAnCpH,EAAkC,EAAlCA,UAAWF,EAAuB,EAAvBA,KAAMlB,EAAiB,EAAjBA,KAAMyB,EAAW,EAAXA,KAAW,EACfgH,YAAiBvH,GAA5CiF,EAD0C,EAC1CA,MAAOC,EADmC,EACnCA,SAAUsC,EADyB,EACzBA,MAEnBzB,EAASP,EAAS1G,GAClBkH,EAAQR,EAAS1G,EAAMmG,EAAMS,SAE7B+B,EAAclH,EAAI,YAAQA,GA/Mb,SAiNnB,OACE,yBAAKH,UAAU,gBACb,yBAAKA,UAAU,sBACb,4DACA,4BAAKF,IAEP,yBAAKE,UAAU,qBACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,iCAAf,YACA,yBAAKA,UAAU,gCAAf,eACA,yBAAKA,UAAU,gCAAgCqH,GAC/C,yBAAKrH,UAAU,+BA3NL,aA6NZ,yBAAKA,UAAU,uBACb,kBAAC4E,EAAD,CAAQlG,KAAMA,EAAMmG,MAAOA,EAAOC,SAAUA,KAE9C,yBACE9E,UAAS,6DACP2F,IAAWC,EAAQ,mCAAqC,KAG1D,yBAAK5F,UAAU,iCAAf,SACA,yBAAKA,UAAU,iCACf,yBAAKA,UAAU,gCACZoE,EAAcuB,IAEjB,yBAAK3F,UAAU,+BACZoE,EAAcwB,MAIrB,yBAAK5F,UAAU,8BACb,yBAAKA,UAAU,uBACb,kBAACsH,EAAD,CACEjI,MAAOgI,EACPjI,MAAOgF,EAAcuB,GACrB3F,UAAU,8BAEZ,kBAACsH,EAAD,CACEjI,MAvPQ,WAwPRD,MAAOgF,EAAcwB,GACrB5F,UAAU,2BACVuH,UAAW,CACT,CACElI,MAAO,UACPD,MAAOgF,EAAcuB,EAASC,IAEhC,CACEvG,MAAO,YACPD,MAAM,GAAD,OAAK8E,KAAKS,MAAO,KAAOgB,EAASC,GAAUD,GAA3C,UAKb,4BAAQ3F,UAAU,yBAAyB2G,QAAS,kBAAMS,MAA1D,YASR,IAAME,EAAQ,SAARA,EAAS,GAA+D,IAA7DjI,EAA4D,EAA5DA,MAAOD,EAAqD,EAArDA,MAAOmI,EAA8C,EAA9CA,UAA8C,IAAnCvH,iBAAmC,MAAvB,GAAuB,MAAnBwH,aAAmB,SAC3E,OACE,yBACExH,UAAS,6BACPwH,EAAQ,0BAA4B,+BAD7B,aAEJxH,IAEL,yBAAKA,UAAU,4BAA4BX,GAC3C,yBAAKW,UAAU,4BAA4BZ,GAC1CmI,GACC,yBAAKvH,UAAU,gCACZuH,EAAUrI,KAAI,SAACC,GAAD,OACb,kBAACmI,EAAD,eAAO3F,IAAKxC,EAAEE,OAAWF,EAAzB,CAA4BqI,OAAO,a,wCC3S/CpB,EAAOqB,QAAU,IAA0B,iE,kECCrCC,EAAU,SAAC7C,EAAO8C,GACtB,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,2BACF/C,GADL,IAEES,QAAQ,2BACHT,EAAMS,SADJ,kBAEJqC,EAAOhG,IAAMgG,EAAOvI,UAG3B,IAAK,QACH,OAAO,2BACFyF,GADL,IAEES,QAAS,KAEb,QACE,OAAOT,IAGPgD,EAAe,CACnBvC,QAAS,IA0BI6B,IAxBU,SAACxF,GAAS,IAAD,EACNmG,4BACxBC,aADyC,UAEtCpG,EAFsC,kBAGzC+F,EACAG,GAL8B,mBACzBhD,EADyB,KAClBmD,EADkB,KAqBhC,MAAO,CAAEnD,QAAOC,SAdC,SAACnD,GAAD,OAAS,SAACvC,GACzB4I,EAAS,CACPJ,KAAM,WACNjG,MACAvC,YAUsBgI,MANZ,WACZY,EAAS,CACPJ,KAAM,c,gCCxCZ,6CAIe,sBAAM,kBAAC,IAAD,CAAK5F,IAAKiG,Q,mBCJ/B7B,EAAOqB,QAAU,IAA0B,oC,6KCA3C,0H","file":"static/js/main.5373c7c7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./city-switcher.scss\";\nimport Select from \"react-select\";\nimport Budget from \"components/budget\";\n\nconst CitySwitcher = ({ data }) => {\n  const { data: dataByCity, yearByCity, slugTitle } = selectData(data);\n  const cityOptions = Object.keys(slugTitle).map((d) => ({\n    value: d,\n    label: slugTitle[d],\n  }));\n  const preselectedCity = window.PoliceBudgetCity || null;\n  const preselectedOption =\n    preselectedCity && cityOptions.find((d) => d.value === preselectedCity);\n  const [city, setCity] = useState(\n    preselectedOption\n      ? preselectedOption.value\n      : cityOptions.find(({ value }) => value === \"atlanta-ga\").value\n  );\n\n  const cityLabel = slugTitle[city];\n  const budgetYear = yearByCity[city];\n\n  return (\n    <div className=\"CitySwitcher\">\n      {!preselectedOption && (\n        <Select\n          options={cityOptions}\n          value={cityOptions.find(({ value }) => value === city)}\n          onChange={(value) => {\n            setCity(value.value);\n          }}\n        />\n      )}\n      <Budget\n        cityLabel={cityLabel}\n        city={city}\n        year={budgetYear}\n        data={dataByCity[city]}\n      />\n    </div>\n  );\n};\n\nexport default CitySwitcher;\n\nconst selectData = (data) => {\n  const slugTitle = {};\n  const dataWithIds = data.map((d) => {\n    const slug = `${d.city\n      .trim()\n      .toLowerCase()\n      .replace(/\\./g, \"\")\n      .replace(/\\s/g, \"-\")}-${d[\"stateAbb\"].trim().toLowerCase()}`;\n    if (!slugTitle[slug]) {\n      slugTitle[slug] = `${d.city.trim()}, ${d[\"stateAbb\"].trim()}`;\n    }\n    return {\n      ...d,\n      uid: `${d.department}-${d.expensecat}-${d.subdep}-${d.expensedescrip}-${d.personneltype}`,\n      slug,\n      total: parseInt(d.total),\n    };\n  });\n  const dataByCity = dataWithIds.reduce((r, d) => {\n    if (!r[d.slug]) {\n      r[d.slug] = [];\n    }\n    r[d.slug].push(d);\n    return r;\n  }, {});\n  const yearByCity = Object.keys(dataByCity).reduce((r, d) => {\n    r[d] = dataByCity[d][0].year;\n    return r;\n  }, {});\n\n  const dataByCategory = organizeBudget(dataByCity);\n\n  console.log(dataByCategory);\n\n  return {\n    data: dataByCategory,\n    yearByCity,\n    slugTitle,\n  };\n};\n\nconst organizeBudget = (data) => {\n  return Object.keys(data).reduce((r, city) => {\n    r[city] = groupByKey(\"department\", data[city]);\n    Object.keys(r[city]).forEach((department) => {\n      r[city][department] = groupByKey(\"expensecat\", r[city][department]);\n\n      Object.keys(r[city][department]).forEach((category) => {\n        r[city][department][category] = groupByKey(\n          \"subdep\",\n          r[city][department][category]\n        );\n\n        Object.keys(r[city][department][category]).forEach((subdep) => {\n          r[city][department][category][subdep] = groupByKey(\n            \"expensedescrip\",\n            r[city][department][category][subdep]\n          );\n\n          Object.keys(r[city][department][category][subdep]).forEach(\n            (description) => {\n              r[city][department][category][subdep][description] = groupByKey(\n                \"personneltype\",\n                r[city][department][category][subdep][description]\n              );\n            }\n          );\n        });\n      });\n    });\n    return r;\n  }, {});\n};\n\nconst groupByKey = (key, rows) => {\n  return rows.reduce((r, d) => {\n    if (!r[d[key]]) {\n      r[d[key]] = [];\n    }\n    r[d[key]].push(d);\n    return r;\n  }, {});\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./app.scss\";\nimport dataSrc from \"./ConsolidatedExp_72PoliceDepartments.csv\";\nimport { csvParse } from \"d3-dsv\";\nimport CitySwitcher from \"components/city-switcher\";\n\nconst App = () => {\n  const data = useCsv(dataSrc);\n  if (!data) {\n    return <div>Loading</div>;\n  }\n  return <CitySwitcher data={data} />;\n};\n\nexport default App;\n\nconst useCsv = (src) => {\n  const [data, setData] = useState();\n  useEffect(() => {\n    fetch(src)\n      .then((res) => res.text())\n      .then((res) => {\n        setData(csvParse(res));\n      });\n  }, [setData, src]);\n  return data;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"PoliceBudgets\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { createContext } from \"react\";\n\nexport const LevelContext = createContext(1);\n\nexport const HDown = (props) => {\n  return (\n    <LevelContext.Consumer>\n      {(level) => (\n        <LevelContext.Provider value={level + 1}>\n          {props.children}\n        </LevelContext.Provider>\n      )}\n    </LevelContext.Consumer>\n  );\n};\nexport const H = (props) => {\n  return (\n    <LevelContext.Consumer>\n      {(level) => {\n        const Heading = \"h\" + Math.min(level, 6);\n        return <Heading {...props} />;\n      }}\n    </LevelContext.Consumer>\n  );\n};\n\nexport default H;\n","import React, { useContext, useState } from \"react\";\nimport \"./budget.scss\";\nimport { H, HDown, LevelContext } from \"components/heading\";\nimport useBudgetReducer from \"./useBudgetReducer\";\nimport Carrot from \"components/carrot\";\nimport Visualization from \"components/visualization\";\nimport InputNumber from \"react-input-number\";\n\nexport const formatDollars = (value) =>\n  new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n  }).format(Math.round(value));\n\nconst BEFORE_LABEL = \"FY2020\";\nconst AFTER_LABEL = \"Proposed\";\n\nconst Budget = ({ data, state, setValue }) => {\n  const level = useContext(LevelContext);\n  const keys = Object.keys(data).sort(sortByTotal);\n  const { changes } = state;\n\n  function sortByTotal(a, b) {\n    const aval = getTotal(data[a]);\n    const bval = getTotal(data[b]);\n\n    if (aval > bval) {\n      return -1;\n    } else if (aval < bval) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  if (keys.length === 1 && !Array.isArray(data[keys[0]])) {\n    return <Budget data={data[keys[0]]} state={state} setValue={setValue} />;\n  }\n  return (\n    <HDown>\n      <div style={{ marginLeft: `${level > 1 ? 1.5 : 0}rem` }}>\n        {keys.map((key) => {\n          if (Array.isArray(data[key])) {\n            const before = getTotal(data[key]);\n            const after = getTotal(data[key], changes);\n            const uid = data[key][0].uid;\n\n            return (\n              <LineItem\n                key={key}\n                title={key}\n                value={changes[uid]}\n                setValue={setValue(uid)}\n                before={before}\n                after={after}\n              ></LineItem>\n            );\n          } else {\n            const uid = bottomUid(data[key]); //this is innacurate for large cats, pulling first\n            const nextLevel = nextLevelDown(data[key]);\n            const before = getTotal(data[key]);\n            const after = getTotal(data[key], changes);\n\n            const nextIsParent =\n              data[keys[keys.indexOf(key) + 1]] &&\n              nextLevelDown(data[keys[keys.indexOf(key) + 1]]);\n\n            return (\n              <LineItem\n                key={key}\n                title={key}\n                nextLevel={nextLevel}\n                nextIsParent={nextIsParent}\n                value={changes[uid]}\n                setValue={setValue(uid)}\n                before={before}\n                after={after}\n              >\n                {nextLevel && (\n                  <div className=\"PoliceBudget-nested\">\n                    <Budget\n                      data={nextLevel}\n                      state={state}\n                      setValue={setValue}\n                    />\n                  </div>\n                )}\n              </LineItem>\n            );\n          }\n        })}\n      </div>\n    </HDown>\n  );\n};\n\nconst LineItem = ({\n  nextLevel,\n  nextIsParent,\n  title,\n  value,\n  setValue,\n  before,\n  after,\n  children,\n}) => {\n  const [open, setOpen] = useState(!!module.hot);\n  const toggleOpen = () => setOpen(!open);\n  const hasChange = before !== after;\n  return (\n    <React.Fragment>\n      <div\n        className={`PoliceBudget-lineitem ${\n          !nextLevel ? \"PoliceBudget-lineitem--final\" : \"\"\n        } ${nextIsParent ? \"PoliceBudget-lineitem--last\" : \"\"} ${\n          hasChange ? \"PoliceBudget-lineitem--haschange\" : \"\"\n        }\n        `}\n      >\n        <div className=\"PoliceBudget-lineitem-heading\">\n          {nextLevel ? (\n            <button\n              className={`PoliceBudget-lineitem-toggle ${\n                open ? \"is-open\" : \"\"\n              }`}\n              onClick={toggleOpen}\n            >\n              <Carrot />\n              <H>{title}</H>\n            </button>\n          ) : (\n            <H>{title}</H>\n          )}\n        </div>\n        <div className=\"PoliceBudget-lineitem-adjust\">\n          {!nextLevel ? (\n            <Adjust value={value} onChange={setValue} />\n          ) : (\n            !open && (\n              <button\n                className={`PoliceBudget-lineitem-adjust-toggle ${\n                  open ? \"is-open\" : \"\"\n                }`}\n                onClick={toggleOpen}\n              >\n                Adjust\n              </button>\n            )\n          )}\n        </div>\n        <div className=\"PoliceBudget-lineitem-before\">\n          {formatDollars(before)}\n        </div>\n        <div className=\"PoliceBudget-lineitem-after\">\n          {formatDollars(after)}\n        </div>\n      </div>\n      {open && children}\n    </React.Fragment>\n  );\n};\n\nconst Adjust = ({ value, onChange }) => {\n  return (\n    <div className=\"PoliceBudget-adjust\">\n      <div className=\"PoliceBudget-adjust-input\">\n        <InputNumber\n          min={-100}\n          max={100}\n          step={1}\n          value={value}\n          onChange={onChange}\n          enableMobileNumericKeyboard\n        />\n        %\n      </div>\n    </div>\n  );\n};\n\nfunction bottomUid(data) {\n  if (Array.isArray(data)) {\n    return data[0].uid;\n  } else {\n    return bottomUid(data[Object.keys(data)[0]]);\n  }\n}\n\nfunction nextLevelDown(data) {\n  if (Array.isArray(data)) {\n    return null;\n  }\n  const keys = Object.keys(data);\n  if (keys.length === 1) {\n    return nextLevelDown(data[keys[0]]);\n  }\n  return data;\n}\n\nexport const getTotal = (data, changes) => {\n  if (Array.isArray(data)) {\n    return sumRows(data);\n  }\n  return Object.values(data).reduce((r, d) => {\n    return r + (Array.isArray(d) ? sumRows(d) : getTotal(d, changes));\n  }, 0);\n\n  function sumRows(rows) {\n    return rows.reduce((r, d) => {\n      const co = changes && changes[d.uid] ? 1 - changes[d.uid] / 100 : 1;\n      return r + d.total * co;\n    }, 0);\n  }\n};\n\nexport default ({ cityLabel, city, data, year }) => {\n  const { state, setValue, reset } = useBudgetReducer(city);\n\n  const before = getTotal(data);\n  const after = getTotal(data, state.changes);\n\n  const beforeLabel = year ? `FY${year}` : BEFORE_LABEL;\n\n  return (\n    <div className=\"PoliceBudget\">\n      <div className=\"PoliceBudget-title\">\n        <div>Adjust the police budget in</div>\n        <h1>{cityLabel}</h1>\n      </div>\n      <div className=\"PoliceBudget-main\">\n        <div className=\"PoliceBudget-lineitem PoliceBudget-header\">\n          <div className=\"PoliceBudget-lineitem-heading\">Category</div>\n          <div className=\"PoliceBudget-lineitem-adjust\">% Reduction</div>\n          <div className=\"PoliceBudget-lineitem-before\">{beforeLabel}</div>\n          <div className=\"PoliceBudget-lineitem-after\">{AFTER_LABEL}</div>\n        </div>\n        <div className=\"PoliceBudget-budget\">\n          <Budget data={data} state={state} setValue={setValue} />\n        </div>\n        <div\n          className={`PoliceBudget-lineitem PoliceBudget-lineitem--total ${\n            before !== after ? \"PoliceBudget-lineitem--haschange\" : \"\"\n          }`}\n        >\n          <div className=\"PoliceBudget-lineitem-heading\">Total</div>\n          <div className=\"PoliceBudget-lineitem-adjust\"></div>\n          <div className=\"PoliceBudget-lineitem-before\">\n            {formatDollars(before)}\n          </div>\n          <div className=\"PoliceBudget-lineitem-after\">\n            {formatDollars(after)}\n          </div>\n        </div>\n      </div>\n      <div className=\"PoliceBudget-visualization\">\n        <div className=\"PoliceBudget-totals\">\n          <Total\n            label={beforeLabel}\n            value={formatDollars(before)}\n            className=\"PoliceBudget-total-before\"\n          />\n          <Total\n            label={AFTER_LABEL}\n            value={formatDollars(after)}\n            className=\"PoliceBudget-total-after\"\n            subvalues={[\n              {\n                label: \"Savings\",\n                value: formatDollars(before - after),\n              },\n              {\n                label: \"Reduction\",\n                value: `${Math.round((100 * (before - after)) / before)}%`,\n              },\n            ]}\n          />\n        </div>\n        <button className=\"PoliceBudget-reset btn\" onClick={() => reset()}>\n          reset\n        </button>\n        {/* <Visualization data={data} /> */}\n      </div>\n    </div>\n  );\n};\n\nconst Total = ({ label, value, subvalues, className = \"\", isTop = true }) => {\n  return (\n    <div\n      className={`PoliceBudget-total ${\n        isTop ? \"PoliceBudget-total--top\" : \"PoliceBudget-total--subvalue\"\n      }  ${className}`}\n    >\n      <div className=\"PoliceBudget-total-label\">{label}</div>\n      <div className=\"PoliceBudget-total-value\">{value}</div>\n      {subvalues && (\n        <div className=\"PoliceBudget-total-subvalues\">\n          {subvalues.map((d) => (\n            <Total key={d.label} {...d} isTop={false} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/ConsolidatedExp_72PoliceDepartments.4aeb6cbd.csv\";","import { useStorageReducer } from \"react-storage-hooks\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"setValue\":\n      return {\n        ...state,\n        changes: {\n          ...state.changes,\n          [action.key]: action.value,\n        },\n      };\n    case \"reset\":\n      return {\n        ...state,\n        changes: {},\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  changes: {},\n};\nconst useBudgetReducer = (key) => {\n  const [state, dispatch] = useStorageReducer(\n    localStorage,\n    `${key} Police Budget`,\n    reducer,\n    initialState\n  );\n  const setValue = (key) => (value) => {\n    dispatch({\n      type: \"setValue\",\n      key,\n      value,\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: \"reset\",\n    });\n  };\n\n  return { state, setValue, reset };\n};\n\nexport default useBudgetReducer;\n","import React from \"react\";\nimport SVG from \"react-inlinesvg\";\nimport carrotSrc from \"./carrot.svg\";\n\nexport default () => <SVG src={carrotSrc} />;\n","module.exports = __webpack_public_path__ + \"static/media/carrot.f3e14036.svg\";","export { default, getTotal, formatDollars } from \"./budget\";\n"],"sourceRoot":""}