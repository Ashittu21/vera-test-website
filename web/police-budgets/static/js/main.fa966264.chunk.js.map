{"version":3,"sources":["components/app/Consolidated_72PoliceDepartments.csv","components/heading.js","components/budget/useBudgetReducer.js","components/budget/budget.js","components/city-switcher/city-switcher.js","components/app/app.js","serviceWorker.js","index.js"],"names":["module","exports","LevelContext","createContext","HDown","props","Consumer","level","Provider","value","children","H","Heading","Math","min","reducer","state","action","type","changes","key","initialState","useBudgetReducer","useStorageReducer","localStorage","dispatch","setValue","formatDollars","Intl","NumberFormat","style","currency","Budget","data","keys","useContext","Object","length","Array","isArray","map","className","onChange","uid","format","total","bottomUid","nextLevel","nextLevelDown","before","getTotal","after","Fragment","Adjust","increment","max","e","target","city","values","reduce","r","d","co","CitySwitcher","dataByCity","selectData","cityOptions","label","useState","setCity","useEffect","cityValues","onKeyPress","index","indexOf","next","nextCity","prev","prevCity","window","addEventListener","removeEventListener","options","find","department","expensecat","subdep","expensedescrip","personneltype","push","organizeBudget","groupByKey","forEach","category","description","rows","App","useCsv","dataSrc","console","log","src","setData","fetch","then","res","text","csvParse","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fa966264.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Consolidated_72PoliceDepartments.21ec9f08.csv\";","import React, { createContext } from \"react\";\n\nexport const LevelContext = createContext(1);\n\nexport const HDown = (props) => {\n  return (\n    <LevelContext.Consumer>\n      {(level) => (\n        <LevelContext.Provider value={level + 1}>\n          {props.children}\n        </LevelContext.Provider>\n      )}\n    </LevelContext.Consumer>\n  );\n};\nexport const H = (props) => {\n  return (\n    <LevelContext.Consumer>\n      {(level) => {\n        const Heading = \"h\" + Math.min(level, 6);\n        return <Heading {...props} />;\n      }}\n    </LevelContext.Consumer>\n  );\n};\n\nexport default H;\n","import { useStorageReducer } from \"react-storage-hooks\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"setValue\":\n      return {\n        ...state,\n        changes: {\n          ...state.changes,\n          [action.key]: action.value,\n        },\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  changes: {},\n};\nconst useBudgetReducer = (key) => {\n  const [state, dispatch] = useStorageReducer(\n    localStorage,\n    `${key} Police Budget`,\n    reducer,\n    initialState\n  );\n  const setValue = (key) => (value) => {\n    dispatch({\n      type: \"setValue\",\n      key,\n      value,\n    });\n  };\n\n  return { state, setValue };\n};\n\nexport default useBudgetReducer;\n","import React, { useContext } from \"react\";\nimport \"./budget.scss\";\nimport { H, HDown, LevelContext } from \"components/heading\";\nimport useBudgetReducer from \"./useBudgetReducer\";\n\nconst formatDollars = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nconst Budget = ({ data, state, setValue }) => {\n  const level = useContext(LevelContext);\n  const keys = Object.keys(data);\n  const { changes } = state;\n\n  if (keys.length === 1 && !Array.isArray(data[keys[0]])) {\n    return <Budget data={data[keys[0]]} state={state} setValue={setValue} />;\n  }\n  return (\n    <HDown>\n      {keys.map((key) => {\n        if (Array.isArray(data[key])) {\n          return (\n            <div\n              key={key}\n              className=\"PoliceBudget-lineitem PoliceBudget-lineitem--final\"\n            >\n              <H>{key}</H>\n              <Adjust\n                value={changes[key]}\n                onChange={setValue(data[key][0].uid)}\n              />\n              <div>{formatDollars.format(data[key][0].total)}</div>\n            </div>\n          );\n        } else {\n          const uid = bottomUid(data[key]); //this is innacurate for large cats, pulling first\n          const nextLevel = nextLevelDown(data[key]);\n          const before = getTotal(data[key]);\n          const after = getTotal(data[key], changes);\n\n          return (\n            <React.Fragment key={key}>\n              <div\n                className={`PoliceBudget-lineitem ${\n                  !nextLevel ? \"PoliceBudget-lineitem--final\" : \"\"\n                }`}\n              >\n                <H>{key}</H>\n                <div>\n                  {!nextLevel && (\n                    <Adjust value={changes[uid]} onChange={setValue(uid)} />\n                  )}\n                </div>\n                <div>{formatDollars.format(before)}</div>\n                <div>{formatDollars.format(after)}</div>\n              </div>\n              {nextLevel && (\n                <Budget data={nextLevel} state={state} setValue={setValue} />\n              )}\n            </React.Fragment>\n          );\n        }\n      })}\n    </HDown>\n  );\n};\n\nconst Adjust = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"number\"\n      value={value || 0}\n      increment={1}\n      max={100}\n      min={-100}\n      onChange={(e) => onChange(+e.target.value)}\n    />\n  );\n};\n\nfunction bottomUid(data) {\n  if (Array.isArray(data)) {\n    return data[0].uid;\n  } else {\n    return bottomUid(data[Object.keys(data)[0]]);\n  }\n}\n\nfunction nextLevelDown(data) {\n  if (Array.isArray(data)) {\n    return null;\n  }\n  const keys = Object.keys(data);\n  if (keys.length === 1) {\n    return nextLevelDown(data[keys[0]]);\n  }\n  return data;\n}\n\nexport default ({ city, data }) => {\n  const { state, setValue } = useBudgetReducer(city);\n\n  const before = getTotal(data);\n  const after = getTotal(data, state.changes);\n  return (\n    <div className=\"PoliceBudget\">\n      <div\n        className=\"PoliceBudget-lineitem\"\n        //style={{ position: \"sticky\", top: \"0\", backgroundColor: \"white\" }}\n      >\n        <h1>{city}</h1>\n        <div></div>\n        <div>{formatDollars.format(before)}</div>\n        <div>{formatDollars.format(after)}</div>\n      </div>\n      <Budget data={data} state={state} setValue={setValue} />\n    </div>\n  );\n};\n\nconst getTotal = (data, changes) => {\n  return Object.values(data).reduce((r, d) => {\n    return r + (Array.isArray(d) ? sumRows(d) : getTotal(d, changes));\n  }, 0);\n\n  function sumRows(rows) {\n    return rows.reduce((r, d) => {\n      const co = changes && changes[d.uid] ? 1 - changes[d.uid] / 100 : 1;\n      return r + +d.total * co;\n    }, 0);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./city-switcher.scss\";\nimport Select from \"react-select\";\nimport Budget from \"components/budget\";\n\nconst CitySwitcher = ({ data }) => {\n  const dataByCity = selectData(data);\n  const cityOptions = Object.keys(dataByCity).map((d) => ({\n    value: d,\n    label: d,\n  }));\n\n  const [city, setCity] = useState(cityOptions[0].value);\n\n  useEffect(() => {\n    const cityValues = cityOptions.map(({ value }) => value);\n    const nextCity = () => {\n      const index = cityValues.indexOf(city);\n      const next = cityOptions[index + 1]\n        ? cityOptions[index + 1]\n        : cityOptions[0];\n      setCity(next.value);\n    };\n    const prevCity = () => {\n      const index = cityValues.indexOf(city);\n      const prev = cityOptions[index - 1]\n        ? cityOptions[index - 1]\n        : cityOptions[cityValues.length - 1];\n      setCity(prev.value);\n    };\n    const onKeyPress = (e) => {\n      if (e.key === \"ArrowUp\") {\n        nextCity();\n      } else if (e.key === \"ArrowDown\") {\n        prevCity();\n      }\n    };\n    window.addEventListener(\"keydown\", onKeyPress);\n    return () => window.removeEventListener(\"keydown\", onKeyPress);\n  }, [city, cityOptions]);\n\n  return (\n    <div className=\"CitySwitcher\">\n      <Select\n        options={cityOptions}\n        value={cityOptions.find(({ value }) => value === city)}\n        onChange={(value) => {\n          setCity(value.value);\n        }}\n      />\n      <Budget city={city} data={dataByCity[city]} />\n    </div>\n  );\n};\n\nexport default CitySwitcher;\n\nconst selectData = (data) => {\n  const dataWithIds = data.map((d) => {\n    return {\n      uid: `${d.department}-${d.expensecat}-${d.subdep}-${d.expensedescrip}-${d.personneltype}`,\n      ...d,\n    };\n  });\n  const dataByCity = dataWithIds.reduce((r, d) => {\n    if (!r[d[\"citystate\"]]) {\n      r[d[\"citystate\"]] = [];\n    }\n    r[d[\"citystate\"]].push(d);\n    return r;\n  }, {});\n\n  const dataByCategory = organizeBudget(dataByCity);\n\n  return dataByCategory;\n};\n\nconst organizeBudget = (data) => {\n  return Object.keys(data).reduce((r, city) => {\n    r[city] = groupByKey(\"department\", data[city]);\n    Object.keys(r[city]).forEach((department) => {\n      r[city][department] = groupByKey(\"expensecat\", r[city][department]);\n\n      Object.keys(r[city][department]).forEach((category) => {\n        r[city][department][category] = groupByKey(\n          \"subdep\",\n          r[city][department][category]\n        );\n\n        Object.keys(r[city][department][category]).forEach((subdep) => {\n          r[city][department][category][subdep] = groupByKey(\n            \"expensedescrip\",\n            r[city][department][category][subdep]\n          );\n\n          Object.keys(r[city][department][category][subdep]).forEach(\n            (description) => {\n              r[city][department][category][subdep][description] = groupByKey(\n                \"personneltype\",\n                r[city][department][category][subdep][description]\n              );\n            }\n          );\n        });\n      });\n    });\n    return r;\n  }, {});\n};\n\nconst groupByKey = (key, rows) => {\n  return rows.reduce((r, d) => {\n    if (!r[d[key]]) {\n      r[d[key]] = [];\n    }\n    r[d[key]].push(d);\n    return r;\n  }, {});\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./app.scss\";\nimport dataSrc from \"./Consolidated_72PoliceDepartments.csv\";\nimport { csvParse } from \"d3-dsv\";\nimport CitySwitcher from \"components/city-switcher\";\n\nconst App = () => {\n  const data = useCsv(dataSrc);\n  if (!data) {\n    return <div>Loading</div>;\n  }\n\n  console.log(data);\n\n  return <CitySwitcher data={data} />;\n};\n\nexport default App;\n\nconst useCsv = (src) => {\n  const [data, setData] = useState();\n  useEffect(() => {\n    fetch(src)\n      .then((res) => res.text())\n      .then((res) => {\n        setData(csvParse(res));\n      });\n  }, [setData, src]);\n  return data;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"PoliceBudgets\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}