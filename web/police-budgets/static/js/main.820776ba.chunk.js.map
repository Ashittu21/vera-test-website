{"version":3,"sources":["components/city-switcher/city-switcher.js","components/app/app.js","serviceWorker.js","index.js","components/heading.js","components/budget/budget.js","components/app/ConsolidatedExp_72PoliceDepartments.csv","components/budget/useBudgetReducer.js","components/carrot/index.js","components/carrot/carrot.svg","components/budget/index.js"],"names":["CitySwitcher","data","selectData","dataByCity","slugTitle","cityOptions","Object","keys","map","d","value","label","console","log","preselectedCity","window","PoliceBudgetCity","preselectedOption","find","useState","city","setCity","cityLabel","className","options","onChange","slug","trim","toLowerCase","replace","uid","department","expensecat","subdep","expensedescrip","personneltype","total","parseInt","reduce","r","push","dataByCategory","organizeBudget","groupByKey","forEach","category","description","key","rows","App","useCsv","dataSrc","src","setData","useEffect","fetch","then","res","text","csvParse","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","LevelContext","createContext","HDown","props","Consumer","level","Provider","children","H","Heading","Math","min","formatDollars","Intl","NumberFormat","style","currency","minimumFractionDigits","format","round","Budget","state","setValue","useContext","sort","a","b","aval","getTotal","bval","changes","length","Array","isArray","marginLeft","before","after","LineItem","title","bottomUid","nextLevel","nextLevelDown","nextIsParent","indexOf","module","hot","open","setOpen","toggleOpen","hasChange","Fragment","onClick","Adjust","max","step","enableMobileNumericKeyboard","sumRows","values","co","useBudgetReducer","reset","Total","subvalues","isTop","exports","reducer","action","type","initialState","useStorageReducer","localStorage","dispatch","carrotSrc"],"mappings":"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","file":"static/js/main.820776ba.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./city-switcher.scss\";\nimport Select from \"react-select\";\nimport Budget from \"components/budget\";\n\nconst CitySwitcher = ({ data }) => {\n  const { data: dataByCity, slugTitle } = selectData(data);\n  const cityOptions = Object.keys(slugTitle).map((d) => ({\n    value: d,\n    label: slugTitle[d],\n  }));\n  console.log(cityOptions);\n  const preselectedCity = window.PoliceBudgetCity || null;\n  const preselectedOption =\n    preselectedCity && cityOptions.find((d) => d.value === preselectedCity);\n  const [city, setCity] = useState(\n    preselectedOption\n      ? preselectedOption.value\n      : cityOptions.find(({ value }) => value === \"atlanta-ga\").value\n  );\n\n  const cityLabel = slugTitle[city];\n\n  // useEffect(() => {\n  //   const cityValues = cityOptions.map(({ value }) => value);\n  //   const nextCity = () => {\n  //     const index = cityValues.indexOf(city);\n  //     const next = cityOptions[index + 1]\n  //       ? cityOptions[index + 1]\n  //       : cityOptions[0];\n  //     setCity(next.value);\n  //   };\n  //   const prevCity = () => {\n  //     const index = cityValues.indexOf(city);\n  //     const prev = cityOptions[index - 1]\n  //       ? cityOptions[index - 1]\n  //       : cityOptions[cityValues.length - 1];\n  //     setCity(prev.value);\n  //   };\n  //   const onKeyPress = (e) => {\n  //     if (e.key === \"ArrowUp\") {\n  //       nextCity();\n  //     } else if (e.key === \"ArrowDown\") {\n  //       prevCity();\n  //     }\n  //   };\n  //   window.addEventListener(\"keydown\", onKeyPress);\n  //   return () => window.removeEventListener(\"keydown\", onKeyPress);\n  // }, [city, cityOptions]);\n\n  return (\n    <div className=\"CitySwitcher\">\n      {!preselectedOption && (\n        <Select\n          options={cityOptions}\n          value={cityOptions.find(({ value }) => value === city)}\n          onChange={(value) => {\n            setCity(value.value);\n          }}\n        />\n      )}\n      <Budget cityLabel={cityLabel} city={city} data={dataByCity[city]} />\n    </div>\n  );\n};\n\nexport default CitySwitcher;\n\nconst selectData = (data) => {\n  const slugTitle = {};\n  const dataWithIds = data.map((d) => {\n    const slug = `${d.city\n      .trim()\n      .toLowerCase()\n      .replace(/\\./g, \"\")\n      .replace(/\\s/g, \"-\")}-${d[\"stateAbb\"].trim().toLowerCase()}`;\n    if (!slugTitle[slug]) {\n      slugTitle[slug] = `${d.city.trim()}, ${d[\"stateAbb\"].trim()}`;\n    }\n    return {\n      ...d,\n      uid: `${d.department}-${d.expensecat}-${d.subdep}-${d.expensedescrip}-${d.personneltype}`,\n      slug,\n      total: parseInt(d.total),\n    };\n  });\n  const dataByCity = dataWithIds.reduce((r, d) => {\n    if (!r[d.slug]) {\n      r[d.slug] = [];\n    }\n    r[d.slug].push(d);\n    return r;\n  }, {});\n\n  const dataByCategory = organizeBudget(dataByCity);\n\n  console.log(dataByCategory);\n\n  return {\n    data: dataByCategory,\n    slugTitle,\n  };\n};\n\nconst organizeBudget = (data) => {\n  return Object.keys(data).reduce((r, city) => {\n    r[city] = groupByKey(\"department\", data[city]);\n    Object.keys(r[city]).forEach((department) => {\n      r[city][department] = groupByKey(\"expensecat\", r[city][department]);\n\n      Object.keys(r[city][department]).forEach((category) => {\n        r[city][department][category] = groupByKey(\n          \"subdep\",\n          r[city][department][category]\n        );\n\n        Object.keys(r[city][department][category]).forEach((subdep) => {\n          r[city][department][category][subdep] = groupByKey(\n            \"expensedescrip\",\n            r[city][department][category][subdep]\n          );\n\n          Object.keys(r[city][department][category][subdep]).forEach(\n            (description) => {\n              r[city][department][category][subdep][description] = groupByKey(\n                \"personneltype\",\n                r[city][department][category][subdep][description]\n              );\n            }\n          );\n        });\n      });\n    });\n    return r;\n  }, {});\n};\n\nconst groupByKey = (key, rows) => {\n  return rows.reduce((r, d) => {\n    if (!r[d[key]]) {\n      r[d[key]] = [];\n    }\n    r[d[key]].push(d);\n    return r;\n  }, {});\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./app.scss\";\nimport dataSrc from \"./ConsolidatedExp_72PoliceDepartments.csv\";\nimport { csvParse } from \"d3-dsv\";\nimport CitySwitcher from \"components/city-switcher\";\n\nconst App = () => {\n  const data = useCsv(dataSrc);\n  if (!data) {\n    return <div>Loading</div>;\n  }\n  return <CitySwitcher data={data} />;\n};\n\nexport default App;\n\nconst useCsv = (src) => {\n  const [data, setData] = useState();\n  useEffect(() => {\n    fetch(src)\n      .then((res) => res.text())\n      .then((res) => {\n        setData(csvParse(res));\n      });\n  }, [setData, src]);\n  return data;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"PoliceBudgets\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { createContext } from \"react\";\n\nexport const LevelContext = createContext(1);\n\nexport const HDown = (props) => {\n  return (\n    <LevelContext.Consumer>\n      {(level) => (\n        <LevelContext.Provider value={level + 1}>\n          {props.children}\n        </LevelContext.Provider>\n      )}\n    </LevelContext.Consumer>\n  );\n};\nexport const H = (props) => {\n  return (\n    <LevelContext.Consumer>\n      {(level) => {\n        const Heading = \"h\" + Math.min(level, 6);\n        return <Heading {...props} />;\n      }}\n    </LevelContext.Consumer>\n  );\n};\n\nexport default H;\n","import React, { useContext, useState } from \"react\";\nimport \"./budget.scss\";\nimport { H, HDown, LevelContext } from \"components/heading\";\nimport useBudgetReducer from \"./useBudgetReducer\";\nimport Carrot from \"components/carrot\";\nimport Visualization from \"components/visualization\";\nimport InputNumber from \"react-input-number\";\n\nexport const formatDollars = (value) =>\n  new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n  }).format(Math.round(value));\n\nconst BEFORE_LABEL = \"FY2020\";\nconst AFTER_LABEL = \"Proposed\";\n\nconst Budget = ({ data, state, setValue }) => {\n  const level = useContext(LevelContext);\n  const keys = Object.keys(data).sort(sortByTotal);\n  const { changes } = state;\n\n  function sortByTotal(a, b) {\n    const aval = getTotal(data[a]);\n    const bval = getTotal(data[b]);\n\n    if (aval > bval) {\n      return -1;\n    } else if (aval < bval) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  if (keys.length === 1 && !Array.isArray(data[keys[0]])) {\n    return <Budget data={data[keys[0]]} state={state} setValue={setValue} />;\n  }\n  return (\n    <HDown>\n      <div style={{ marginLeft: `${level > 1 ? 1.5 : 0}rem` }}>\n        {keys.map((key) => {\n          if (Array.isArray(data[key])) {\n            const before = getTotal(data[key]);\n            const after = getTotal(data[key], changes);\n            const uid = data[key][0].uid;\n\n            return (\n              <LineItem\n                key={key}\n                title={key}\n                value={changes[uid]}\n                setValue={setValue(uid)}\n                before={before}\n                after={after}\n              ></LineItem>\n            );\n          } else {\n            const uid = bottomUid(data[key]); //this is innacurate for large cats, pulling first\n            const nextLevel = nextLevelDown(data[key]);\n            const before = getTotal(data[key]);\n            const after = getTotal(data[key], changes);\n\n            const nextIsParent =\n              data[keys[keys.indexOf(key) + 1]] &&\n              nextLevelDown(data[keys[keys.indexOf(key) + 1]]);\n\n            return (\n              <LineItem\n                key={key}\n                title={key}\n                nextLevel={nextLevel}\n                nextIsParent={nextIsParent}\n                value={changes[uid]}\n                setValue={setValue(uid)}\n                before={before}\n                after={after}\n              >\n                {nextLevel && (\n                  <div className=\"PoliceBudget-nested\">\n                    <Budget\n                      data={nextLevel}\n                      state={state}\n                      setValue={setValue}\n                    />\n                  </div>\n                )}\n              </LineItem>\n            );\n          }\n        })}\n      </div>\n    </HDown>\n  );\n};\n\nconst LineItem = ({\n  nextLevel,\n  nextIsParent,\n  title,\n  value,\n  setValue,\n  before,\n  after,\n  children,\n}) => {\n  const [open, setOpen] = useState(!!module.hot);\n  const toggleOpen = () => setOpen(!open);\n  const hasChange = before !== after;\n  return (\n    <React.Fragment>\n      <div\n        className={`PoliceBudget-lineitem ${\n          !nextLevel ? \"PoliceBudget-lineitem--final\" : \"\"\n        } ${nextIsParent ? \"PoliceBudget-lineitem--last\" : \"\"} ${\n          hasChange ? \"PoliceBudget-lineitem--haschange\" : \"\"\n        }\n        `}\n      >\n        <div className=\"PoliceBudget-lineitem-heading\">\n          {nextLevel ? (\n            <button\n              className={`PoliceBudget-lineitem-toggle ${\n                open ? \"is-open\" : \"\"\n              }`}\n              onClick={toggleOpen}\n            >\n              <Carrot />\n              <H>{title}</H>\n            </button>\n          ) : (\n            <H>{title}</H>\n          )}\n        </div>\n        <div className=\"PoliceBudget-lineitem-adjust\">\n          {!nextLevel ? (\n            <Adjust value={value} onChange={setValue} />\n          ) : (\n            !open && (\n              <button\n                className={`PoliceBudget-lineitem-adjust-toggle ${\n                  open ? \"is-open\" : \"\"\n                }`}\n                onClick={toggleOpen}\n              >\n                Adjust\n              </button>\n            )\n          )}\n        </div>\n        <div className=\"PoliceBudget-lineitem-before\">\n          {formatDollars(before)}\n        </div>\n        <div className=\"PoliceBudget-lineitem-after\">\n          {formatDollars(after)}\n        </div>\n      </div>\n      {open && children}\n    </React.Fragment>\n  );\n};\n\nconst Adjust = ({ value, onChange }) => {\n  return (\n    <div className=\"PoliceBudget-adjust\">\n      <div className=\"PoliceBudget-adjust-input\">\n        <InputNumber\n          min={-100}\n          max={100}\n          step={1}\n          value={value}\n          onChange={onChange}\n          enableMobileNumericKeyboard\n        />\n        %\n      </div>\n    </div>\n  );\n};\n\nfunction bottomUid(data) {\n  if (Array.isArray(data)) {\n    return data[0].uid;\n  } else {\n    return bottomUid(data[Object.keys(data)[0]]);\n  }\n}\n\nfunction nextLevelDown(data) {\n  if (Array.isArray(data)) {\n    return null;\n  }\n  const keys = Object.keys(data);\n  if (keys.length === 1) {\n    return nextLevelDown(data[keys[0]]);\n  }\n  return data;\n}\n\nexport const getTotal = (data, changes) => {\n  if (Array.isArray(data)) {\n    return sumRows(data);\n  }\n  return Object.values(data).reduce((r, d) => {\n    return r + (Array.isArray(d) ? sumRows(d) : getTotal(d, changes));\n  }, 0);\n\n  function sumRows(rows) {\n    return rows.reduce((r, d) => {\n      const co = changes && changes[d.uid] ? 1 - changes[d.uid] / 100 : 1;\n      return r + d.total * co;\n    }, 0);\n  }\n};\n\nexport default ({ cityLabel, city, data }) => {\n  const { state, setValue, reset } = useBudgetReducer(city);\n\n  const before = getTotal(data);\n  const after = getTotal(data, state.changes);\n  return (\n    <div className=\"PoliceBudget\">\n      <div className=\"PoliceBudget-title\">\n        <div>Adjust the police budget in</div>\n        <h1>{cityLabel}</h1>\n      </div>\n      <div className=\"PoliceBudget-main\">\n        <div className=\"PoliceBudget-lineitem PoliceBudget-header\">\n          <div className=\"PoliceBudget-lineitem-heading\">Category</div>\n          <div className=\"PoliceBudget-lineitem-adjust\">% Reduction</div>\n          <div className=\"PoliceBudget-lineitem-before\">{BEFORE_LABEL}</div>\n          <div className=\"PoliceBudget-lineitem-after\">{AFTER_LABEL}</div>\n        </div>\n        <div className=\"PoliceBudget-budget\">\n          <Budget data={data} state={state} setValue={setValue} />\n        </div>\n        <div\n          className={`PoliceBudget-lineitem PoliceBudget-lineitem--total ${\n            before !== after ? \"PoliceBudget-lineitem--haschange\" : \"\"\n          }`}\n        >\n          <div className=\"PoliceBudget-lineitem-heading\">Total</div>\n          <div className=\"PoliceBudget-lineitem-adjust\"></div>\n          <div className=\"PoliceBudget-lineitem-before\">\n            {formatDollars(before)}\n          </div>\n          <div className=\"PoliceBudget-lineitem-after\">\n            {formatDollars(after)}\n          </div>\n        </div>\n      </div>\n      <div className=\"PoliceBudget-visualization\">\n        <div className=\"PoliceBudget-totals\">\n          <Total\n            label={BEFORE_LABEL}\n            value={formatDollars(before)}\n            className=\"PoliceBudget-total-before\"\n          />\n          <Total\n            label={AFTER_LABEL}\n            value={formatDollars(after)}\n            className=\"PoliceBudget-total-after\"\n            subvalues={[\n              {\n                label: \"Savings\",\n                value: formatDollars(before - after),\n              },\n              {\n                label: \"Reduction\",\n                value: `${Math.round((100 * (before - after)) / before)}%`,\n              },\n            ]}\n          />\n        </div>\n        <button className=\"PoliceBudget-reset btn\" onClick={() => reset()}>\n          reset\n        </button>\n      </div>\n      {/* <Visualization data={data} /> */}\n    </div>\n  );\n};\n\nconst Total = ({ label, value, subvalues, className = \"\", isTop = true }) => {\n  return (\n    <div\n      className={`PoliceBudget-total ${\n        isTop ? \"PoliceBudget-total--top\" : \"PoliceBudget-total--subvalue\"\n      }  ${className}`}\n    >\n      <div className=\"PoliceBudget-total-label\">{label}</div>\n      <div className=\"PoliceBudget-total-value\">{value}</div>\n      {subvalues && (\n        <div className=\"PoliceBudget-total-subvalues\">\n          {subvalues.map((d) => (\n            <Total key={d.label} {...d} isTop={false} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/ConsolidatedExp_72PoliceDepartments.4ae0769e.csv\";","import { useStorageReducer } from \"react-storage-hooks\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"setValue\":\n      return {\n        ...state,\n        changes: {\n          ...state.changes,\n          [action.key]: action.value,\n        },\n      };\n    case \"reset\":\n      return {\n        ...state,\n        changes: {},\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  changes: {},\n};\nconst useBudgetReducer = (key) => {\n  const [state, dispatch] = useStorageReducer(\n    localStorage,\n    `${key} Police Budget`,\n    reducer,\n    initialState\n  );\n  const setValue = (key) => (value) => {\n    dispatch({\n      type: \"setValue\",\n      key,\n      value,\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: \"reset\",\n    });\n  };\n\n  return { state, setValue, reset };\n};\n\nexport default useBudgetReducer;\n","import React from \"react\";\nimport SVG from \"react-inlinesvg\";\nimport carrotSrc from \"./carrot.svg\";\n\nexport default () => <SVG src={carrotSrc} />;\n","module.exports = __webpack_public_path__ + \"static/media/carrot.f3e14036.svg\";","export { default, getTotal, formatDollars } from \"./budget\";\n"],"sourceRoot":""}